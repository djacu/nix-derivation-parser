Derive([("out","/nix/store/m3b8p80179lk83w6hpzjxn6wd6hk80xx-pciutils-3.13.0","","")],[("/nix/store/0cxw25gsi8y1jhh81ibfq52dnv3j363h-zlib-1.3.1.drv",["dev"]),("/nix/store/5xf27zalc62awyx5y6byxl2dib8lxnfv-pkg-config-wrapper-0.29.2.drv",["out"]),("/nix/store/6dnsbl1drhag7aylsmrqpdilk1nlh7v2-which-2.21.drv",["out"]),("/nix/store/8dbpkpc1z5778bq0i6vmjjaqm79myizb-kmod-31.drv",["dev"]),("/nix/store/gzlzaavil7r2lpq8b3hyplgfgidf5jw4-stdenv-linux.drv",["out"]),("/nix/store/vjznlmanjkps53l7hw2krvpzwqcd5m3d-bash-5.2p37.drv",["out"]),("/nix/store/vng20bss0kvzrpwahi8mbl46fh3125g3-source.drv",["out"]),("/nix/store/wxsc3ga8zshri6mx65rvbfwr4n72qgcb-hwdata-0.388.drv",["out"])],["/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh"],"x86_64-linux","/nix/store/0irlcqx2n3qm6b1pc9rsd2i8qpvcccaj-bash-5.2p37/bin/bash",["-e","/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh"],[("__structuredAttrs",""),("buildInputs","/nix/store/20mggxpyrbcbs2vxdk3zr7wlgnblwk74-which-2.21 /nix/store/h0j60865g7m591zqw6bl1pjq33x4l9m9-zlib-1.3.1-dev /nix/store/q3qawnpxcxm9kqs4r00ravvgi60nv4jk-kmod-31-dev"),("builder","/nix/store/0irlcqx2n3qm6b1pc9rsd2i8qpvcccaj-bash-5.2p37/bin/bash"),("cmakeFlags",""),("configureFlags",""),("depsBuildBuild",""),("depsBuildBuildPropagated",""),("depsBuildTarget",""),("depsBuildTargetPropagated",""),("depsHostHost",""),("depsHostHostPropagated",""),("depsTargetTarget",""),("depsTargetTargetPropagated",""),("doCheck",""),("doInstallCheck",""),("enableParallelBuilding","1"),("enableParallelChecking","1"),("enableParallelInstalling","1"),("installTargets","install install-lib"),("makeFlags","SHARED=yes PREFIX=${out} STRIP= HOST=x86_64-linux CROSS_COMPILE= DNS=yes"),("mesonFlags",""),("name","pciutils-3.13.0"),("nativeBuildInputs","/nix/store/f1gamyykr0f8n4afy910ass2jx2g9zkv-pkg-config-wrapper-0.29.2"),("out","/nix/store/m3b8p80179lk83w6hpzjxn6wd6hk80xx-pciutils-3.13.0"),("outputs","out"),("patches",""),("pname","pciutils"),("postInstall","# Remove update-pciids as it won't work on nixos\nrm $out/sbin/update-pciids $out/man/man8/update-pciids.8\n\n# use database from hwdata instead\n# (we don't create a symbolic link because we do not want to pull in the\n# full closure of hwdata)\ncp --reflink=auto /nix/store/83jfx0n00vjf50f2nh190j0bml92ycs2-hwdata-0.388/share/hwdata/pci.ids $out/share/pci.ids\n"),("preConfigure",""),("propagatedBuildInputs",""),("propagatedNativeBuildInputs",""),("src","/nix/store/ab4hyrkixdhcgh3yxxda0ha3cq4nd0im-source"),("stdenv","/nix/store/gw0swsnbfk9l8d1il70psm8b3r5m33jv-stdenv-linux"),("strictDeps",""),("system","x86_64-linux"),("version","3.13.0")])