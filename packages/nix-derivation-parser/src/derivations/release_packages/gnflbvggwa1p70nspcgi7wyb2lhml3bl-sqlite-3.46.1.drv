Derive([("bin","/nix/store/h6cd6bwfv04613bln5pam9j691nrgfg0-sqlite-3.46.1-bin","",""),("dev","/nix/store/ajffhbb6nj3snq3za4i1zgnxhk4q52az-sqlite-3.46.1-dev","",""),("doc","/nix/store/n1zrl6d8j4kp696h8q05sapq5lzhhc22-sqlite-3.46.1-doc","",""),("man","/nix/store/m0qa7yp2gsabxwgbl3srjghnd7hc4zh8-sqlite-3.46.1-man","",""),("out","/nix/store/ynr1fsxrvwdckpwzgili133l7v2zpk4i-sqlite-3.46.1","","")],[("/nix/store/5bjvskg5i9pbjpnlfvbpjw85m8sa1p2i-zlib-1.3.1.drv",["dev"]),("/nix/store/5vrk236b9nd6jd97lvyws1k8n7hjvafd-update-autotools-gnu-config-scripts-hook.drv",["out"]),("/nix/store/7d4d4dfhx8smyc7sl261fawp6k6rhrqn-sqlite-doc-3460100.zip.drv",["out"]),("/nix/store/n6q7wpdcgib6r86fcal06y9pw979sji0-sqlite-autoconf-3460100.tar.gz.drv",["out"]),("/nix/store/rmfyn1r3z42vmb4kkd2yxbwj361zqabg-unzip-6.0.drv",["out"]),("/nix/store/vkyx4izz6l988gdynmc9ar8qbj5aq1xh-stdenv-darwin.drv",["out"]),("/nix/store/vqf57k571z3812rxbvc04nphll4ipclk-bash-5.2p37.drv",["out"])],["/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh"],"x86_64-darwin","/nix/store/fhngvmgagwwxhak8nzrx5vqbg4g4qiac-bash-5.2p37/bin/bash",["-e","/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh"],[("NIX_CFLAGS_COMPILE","-DSQLITE_ENABLE_COLUMN_METADATA -DSQLITE_ENABLE_DBSTAT_VTAB -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS3_TOKENIZER -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_STMT_SCANSTATUS -DSQLITE_ENABLE_UNLOCK_NOTIFY -DSQLITE_SOUNDEX -DSQLITE_SECURE_DELETE -DSQLITE_MAX_VARIABLE_NUMBER=250000 -DSQLITE_MAX_EXPR_DEPTH=10000"),("__darwinAllowLocalNetworking",""),("__impureHostDeps","/bin/sh /usr/lib/libSystem.B.dylib /usr/lib/system/libunc.dylib /dev/zero /dev/random /dev/urandom /bin/sh"),("__propagatedImpureHostDeps",""),("__propagatedSandboxProfile",""),("__sandboxProfile",""),("__structuredAttrs",""),("bin","/nix/store/h6cd6bwfv04613bln5pam9j691nrgfg0-sqlite-3.46.1-bin"),("buildInputs","/nix/store/7qvsb4qvnnxlc3s7z3dzq5jfwc0hwdg0-zlib-1.3.1-dev"),("builder","/nix/store/fhngvmgagwwxhak8nzrx5vqbg4g4qiac-bash-5.2p37/bin/bash"),("cmakeFlags",""),("configureFlags","--enable-threadsafe"),("depsBuildBuild",""),("depsBuildBuildPropagated",""),("depsBuildTarget",""),("depsBuildTargetPropagated",""),("depsHostHost",""),("depsHostHostPropagated",""),("depsTargetTarget",""),("depsTargetTargetPropagated",""),("dev","/nix/store/ajffhbb6nj3snq3za4i1zgnxhk4q52az-sqlite-3.46.1-dev"),("doCheck",""),("doInstallCheck",""),("doc","/nix/store/n1zrl6d8j4kp696h8q05sapq5lzhhc22-sqlite-3.46.1-doc"),("docsrc","/nix/store/vr9dkzr4kdnsimys82hcvhd36lpbznrq-sqlite-doc-3460100.zip"),("man","/nix/store/m0qa7yp2gsabxwgbl3srjghnd7hc4zh8-sqlite-3.46.1-man"),("mesonFlags",""),("name","sqlite-3.46.1"),("nativeBuildInputs","/nix/store/qhkl5527ywbh1lfdvd67nxjjpvg2alp0-update-autotools-gnu-config-scripts-hook /nix/store/hwpky1zqgs1hl7zb7ib3m7gb912kkrpg-unzip-6.0"),("out","/nix/store/ynr1fsxrvwdckpwzgili133l7v2zpk4i-sqlite-3.46.1"),("outputs","bin dev man doc out"),("patches",""),("pname","sqlite"),("postInstall","# Do not contaminate dependent libtool-based projects with sqlite dependencies.\nsed -i $out/lib/libsqlite3.la -e \"s/dependency_libs=.*/dependency_libs=''/\"\n\nmkdir -p $doc/share/doc\nunzip $docsrc\nmv sqlite-doc-3460100 $doc/share/doc/sqlite\n"),("preBuild","# Use pread(), pread64(), pwrite(), pwrite64() functions for better performance if they are available.\nif cc -Werror=implicit-function-declaration -x c - -o \"$TMPDIR/pread_pwrite_test\" <<< \\\n  $'#include <unistd.h>\\nint main()\\n{\\n  pread(0, NULL, 0, 0);\\n  pwrite(0, NULL, 0, 0);\\n  return 0;\\n}'; then\n  export NIX_CFLAGS_COMPILE=\"$NIX_CFLAGS_COMPILE -DUSE_PREAD\"\nfi\nif cc -Werror=implicit-function-declaration -x c - -o \"$TMPDIR/pread64_pwrite64_test\" <<< \\\n  $'#include <unistd.h>\\nint main()\\n{\\n  pread64(0, NULL, 0, 0);\\n  pwrite64(0, NULL, 0, 0);\\n  return 0;\\n}'; then\n  export NIX_CFLAGS_COMPILE=\"$NIX_CFLAGS_COMPILE -DUSE_PREAD64\"\nelif cc -D_LARGEFILE64_SOURCE -Werror=implicit-function-declaration -x c - -o \"$TMPDIR/pread64_pwrite64_test\" <<< \\\n  $'#include <unistd.h>\\nint main()\\n{\\n  pread64(0, NULL, 0, 0);\\n  pwrite64(0, NULL, 0, 0);\\n  return 0;\\n}'; then\n  export NIX_CFLAGS_COMPILE=\"$NIX_CFLAGS_COMPILE -DUSE_PREAD64 -D_LARGEFILE64_SOURCE\"\nfi\n\n# Necessary for FTS5 on Linux\nexport NIX_CFLAGS_LINK=\"$NIX_CFLAGS_LINK -lm\"\n\necho \"\"\necho \"NIX_CFLAGS_COMPILE = $NIX_CFLAGS_COMPILE\"\necho \"\"\n"),("preConfigure","patchShebangs configure\n"),("propagatedBuildInputs",""),("propagatedNativeBuildInputs",""),("separateDebugInfo",""),("src","/nix/store/lhpx0mr4v25l6j21nws0wkgcjj5cfbh0-sqlite-autoconf-3460100.tar.gz"),("stdenv","/nix/store/czsf60xzd6xjc14zx51y7wh5b76shx03-stdenv-darwin"),("strictDeps",""),("system","x86_64-darwin"),("version","3.46.1")])