Derive([("bin","/nix/store/dy3ff7xr55p69gxs8py1ll67vlim1z3n-glibc-2.40-36-bin","",""),("debug","/nix/store/l91gbzf4d73p92lviwbjy1yk86dxb47i-glibc-2.40-36-debug","",""),("dev","/nix/store/afn0xk2xd1dcvfyfq1bawhgbdz7arfp2-glibc-2.40-36-dev","",""),("getent","/nix/store/8zcnkq8687m2vryzifc9g6k0rn45nfc2-glibc-2.40-36-getent","",""),("out","/nix/store/w0gi2q79avgm6fr2mikgjl6z781rq0h7-glibc-2.40-36","",""),("static","/nix/store/zbjpjqdlx48gw2p2107r4kybdhvf3fnk-glibc-2.40-36-static","","")],[("/nix/store/0wijjwq9jfd7vychn8p80hb2ijswn46d-bootstrap-stage0-glibc-bootstrapFiles.drv",["out"]),("/nix/store/1plb1l7zmah4p0ri83l3yq7wma3wbnig-binutils-2.43.1.drv",["out"]),("/nix/store/3m7lgdnzbqk4nfmcngvslj8yibz10z6y-bootstrap-stage2-gcc-wrapper-13.3.0.drv",["out"]),("/nix/store/5fia0s7sl13hsqbhcmgmjpq84i0rqczs-glibc-2.40.tar.xz.drv",["out"]),("/nix/store/8mlaj7pmb6y6pw0m8z2ci0gg17sz7brf-bootstrap-tools.drv",["out"]),("/nix/store/98ka86gka7mdxazyaz83a8kfxkac2yyx-linux-headers-6.10.drv",["out"]),("/nix/store/cpjcfa8lm34llg9bq60xczbv1g29hqh3-bison-3.8.2.drv",["out"]),("/nix/store/g6h102bf8xb674g20pi6pxffwbsj75h5-xgcc-13.3.0.drv",["libgcc"]),("/nix/store/h55c2lj45d4ck8w7s5sb8b62a2fb0lvj-bootstrap-stage2-stdenv-linux.drv",["out"]),("/nix/store/qmfkw8c3y5hq3wc7vl94qg79g18s2idi-libidn2-2.3.7.drv",["out"]),("/nix/store/sy2b51nfrvhyrmp63j9r6klx1giq3k2i-python3-minimal-3.12.7.drv",["out"])],["/nix/store/001gp43bjqzx60cg345n2slzg7131za8-nix-nss-open-files.patch","/nix/store/7kw224hdyxd7115lrqh9a4dv2x8msq2s-fix-x64-abi.patch","/nix/store/8haph3ng4mgsqr6p4024vj8k6kg3mqc4-nix-locale-archive.patch","/nix/store/b1w7zbvm39ff1i52iyjggyvw2rdxz104-dont-use-system-ld-so-cache.patch","/nix/store/mlxa7gww562bhbp7gvwlqbzan291ay92-2.40-master.patch","/nix/store/mnglr8rr7nl444h7p50ysyq8qd0fm1lm-dont-use-system-ld-so-preload.patch","/nix/store/pcpx2ayccijipfl32zchx0mg7rzvj6zx-0001-Revert-Remove-all-usage-of-BASH-or-BASH-in-installed.patch","/nix/store/sj0qllprnrmk1cqnnk57vvn2cqgjynbx-reenable_DT_HASH.patch","/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh","/nix/store/vp21khxmr8hsq2iar8qqhr0bvxmwpmvp-0001-aarch64-math-vector.h-add-NVCC-include-guard.patch","/nix/store/xicrk4waf3kazyf96aaavsirgx241r0s-separate-debug-info.sh","/nix/store/za0pg7fmysrcwrqcal26fnmzw6vycgdn-fix_path_attribute_in_getconf.patch"],"aarch64-linux","/nix/store/5qbq251crw3j3cz8nlkhpl6hwf7m23m1-bootstrap-tools/bin/bash",["-e","/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh"],[("BASH_SHELL","/bin/sh"),("NIX_CFLAGS_COMPILE",""),("NIX_HARDENING_ENABLE","bindnow format pic relro strictoverflow zerocallusedregs"),("NIX_NO_SELF_RPATH","1"),("__structuredAttrs",""),("bin","/nix/store/dy3ff7xr55p69gxs8py1ll67vlim1z3n-glibc-2.40-36-bin"),("buildInputs","/nix/store/1y5mapqzsv55ixr9gw1pdi0s5pj3411x-linux-headers-6.10"),("builder","/nix/store/5qbq251crw3j3cz8nlkhpl6hwf7m23m1-bootstrap-tools/bin/bash"),("cmakeFlags",""),("configureFlags","-C --enable-add-ons --sysconfdir=/etc --enable-stack-protector=strong --enable-bind-now --with-headers=/nix/store/1y5mapqzsv55ixr9gw1pdi0s5pj3411x-linux-headers-6.10/include --disable-profile --enable-fortify-source --enable-static-pie --enable-kernel=3.10.0"),("debug","/nix/store/l91gbzf4d73p92lviwbjy1yk86dxb47i-glibc-2.40-36-debug"),("depsBuildBuild","/nix/store/sg0i1il384k3adzcihlzdg8v0hi5fbpm-bootstrap-stage2-gcc-wrapper-13.3.0"),("depsBuildBuildPropagated",""),("depsBuildTarget",""),("depsBuildTargetPropagated",""),("depsHostHost",""),("depsHostHostPropagated",""),("depsTargetTarget",""),("depsTargetTargetPropagated",""),("dev","/nix/store/afn0xk2xd1dcvfyfq1bawhgbdz7arfp2-glibc-2.40-36-dev"),("doCheck",""),("doInstallCheck",""),("enableCETRuntimeDefault",""),("enableParallelBuilding","1"),("enableParallelChecking","1"),("enableParallelInstalling","1"),("getent","/nix/store/8zcnkq8687m2vryzifc9g6k0rn45nfc2-glibc-2.40-36-getent"),("hardeningDisable","fortify pie stackprotector"),("installFlags","sysconfdir=$(out)/etc"),("is64bit","1"),("linuxHeaders","/nix/store/1y5mapqzsv55ixr9gw1pdi0s5pj3411x-linux-headers-6.10"),("makeFlags","OBJCOPY=objcopy user-defined-trusted-dirs=/nix/store/9zk5kpadlnzhz4aq319hykb6anf71g7x-xgcc-13.3.0-libgcc/lib"),("mesonFlags",""),("name","glibc-2.40-36"),("nativeBuildInputs","/nix/store/gv4i26a86ggambp8lbyl59ihh0zig6s0-bison-3.8.2 /nix/store/y3v78jcavjygm5xyvcva4a7djsaspzag-python3-minimal-3.12.7 /nix/store/xicrk4waf3kazyf96aaavsirgx241r0s-separate-debug-info.sh"),("out","/nix/store/w0gi2q79avgm6fr2mikgjl6z781rq0h7-glibc-2.40-36"),("outputs","out bin dev static getent debug"),("patches","/nix/store/mlxa7gww562bhbp7gvwlqbzan291ay92-2.40-master.patch /nix/store/8haph3ng4mgsqr6p4024vj8k6kg3mqc4-nix-locale-archive.patch /nix/store/b1w7zbvm39ff1i52iyjggyvw2rdxz104-dont-use-system-ld-so-cache.patch /nix/store/mnglr8rr7nl444h7p50ysyq8qd0fm1lm-dont-use-system-ld-so-preload.patch /nix/store/za0pg7fmysrcwrqcal26fnmzw6vycgdn-fix_path_attribute_in_getconf.patch /nix/store/7kw224hdyxd7115lrqh9a4dv2x8msq2s-fix-x64-abi.patch /nix/store/001gp43bjqzx60cg345n2slzg7131za8-nix-nss-open-files.patch /nix/store/pcpx2ayccijipfl32zchx0mg7rzvj6zx-0001-Revert-Remove-all-usage-of-BASH-or-BASH-in-installed.patch /nix/store/sj0qllprnrmk1cqnnk57vvn2cqgjynbx-reenable_DT_HASH.patch /nix/store/vp21khxmr8hsq2iar8qqhr0bvxmwpmvp-0001-aarch64-math-vector.h-add-NVCC-include-guard.patch"),("pname","glibc"),("postConfigure","# Hack: get rid of the `-static' flag set by the bootstrap stdenv.\n# This has to be done *after* `configure' because it builds some\n# test binaries.\nexport NIX_CFLAGS_LINK=\nexport NIX_LDFLAGS_BEFORE=\n\nexport NIX_DONT_SET_RPATH=1\nunset CFLAGS\n\n# Apparently --bindir is not respected.\nmakeFlagsArray+=(\"bindir=$bin/bin\" \"sbindir=$bin/sbin\" \"rootsbindir=$bin/sbin\")\n"),("postInstall","moveToOutput bin/getent $getent\necho SUPPORTED-LOCALES=C.UTF-8/UTF-8 > ../glibc-2*/localedata/SUPPORTED\nmake -j${NIX_BUILD_CORES:-1} localedata/install-locales\n\ntest -f $out/etc/ld.so.cache && rm $out/etc/ld.so.cache\n\nif test -n \"$linuxHeaders\"; then\n    # Include the Linux kernel headers in Glibc, except the `scsi'\n    # subdirectory, which Glibc provides itself.\n    (cd $dev/include && \\\n     ln -sv $(ls -d $linuxHeaders/include/* | grep -v scsi\\$) .)\nfi\n\n# Fix for NIXOS-54 (ldd not working on x86_64).  Make a symlink\n# \"lib64\" to \"lib\".\nif test -n \"$is64bit\"; then\n    ln -s lib $out/lib64\nfi\n\n# Get rid of more unnecessary stuff.\nrm -rf $out/var $bin/bin/sln\n\n# Backwards-compatibility to fix e.g.\n# \"configure: error: Pthreads are required to build libgomp\" during `gcc`-build\n# because it's not actually needed anymore to link against `pthreads` since\n# it's now part of `libc.so.6` itself, but the gcc build breaks if\n# this doesn't work.\nln -sf $out/lib/libpthread.so.0 $out/lib/libpthread.so\nln -sf $out/lib/librt.so.1 $out/lib/librt.so\nln -sf $out/lib/libdl.so.2 $out/lib/libdl.so\ntest -f $out/lib/libutil.so.1 && ln -sf $out/lib/libutil.so.1 $out/lib/libutil.so\ntouch $out/lib/libpthread.a\n\n# Put libraries for static linking in a separate output.  Note\n# that libc_nonshared.a and libpthread_nonshared.a are required\n# for dynamically-linked applications.\nmkdir -p $static/lib\nmv $out/lib/*.a $static/lib\nmv $static/lib/lib*_nonshared.a $out/lib\n# If libutil.so.1 is missing, libutil.a is required.\ntest -f $out/lib/libutil.so.1 || mv $static/lib/libutil.a $out/lib\n# Some of *.a files are linker scripts where moving broke the paths.\nsed \"/^GROUP/s|$out/lib/lib|$static/lib/lib|g\" \\\n  -i \"$static\"/lib/*.a\n\n# Work around a Nix bug: hard links across outputs cause a build failure.\ncp $bin/bin/getconf $bin/bin/getconf_\nmv $bin/bin/getconf_ $bin/bin/getconf\n"),("postPatch","# Needed for glibc to build with the gnumake 3.82\n# http://comments.gmane.org/gmane.linux.lfs.support/31227\nsed -i 's/ot \\$/ot:\\n\\ttouch $@\\n$/' manual/Makefile\n\n# nscd needs libgcc, and we don't want it dynamically linked\n# because we don't want it to depend on bootstrap-tools libs.\necho \"LDFLAGS-nscd += -static-libgcc\" >> nscd/Makefile\n\n# Ensure that `__nss_files_fopen` can still be wrapped by `libredirect`.\nsed -i -e '/libc_hidden_def (__nss_files_fopen)/d' nss/nss_files_fopen.c\nsed -i -e '/libc_hidden_proto (__nss_files_fopen)/d' include/nss_files.h\n\n# Ensure that libidn2 is found.\npatch -p 1 <<EOF\n--- a/inet/idna.c\n+++ b/inet/idna.c\n@@ -25,1 +25,1 @@\n-#define LIBIDN2_SONAME \"libidn2.so.0\"\n+#define LIBIDN2_SONAME \"/nix/store/04aq2w58qlqjvwamcljh1hahz744hlzd-libidn2-2.3.7/lib/libidn2.so.0\"\nEOF\n"),("preBuild",""),("preConfigure","export PWD_P=$(type -tP pwd)\nfor i in configure io/ftwtest-sh; do\n    # Can't use substituteInPlace here because replace hasn't been\n    # built yet in the bootstrap.\n    sed -i \"$i\" -e \"s^/bin/pwd^$PWD_P^g\"\ndone\n\nmkdir ../build\ncd ../build\n\nconfigureScript=\"`pwd`/../$sourceRoot/configure\"\n\nmakeFlags=\"$makeFlags BUILD_LDFLAGS=-Wl,-rpath,/nix/store/4d1vblw0d7xgl58sjka2lkgb83jcbskx-bootstrap-stage0-glibc-bootstrapFiles/lib OBJDUMP=/nix/store/8s49dr6z8flp48fj5ivhpnnnnypxnxkg-binutils-2.43.1/bin/objdump\"\n\n\n"),("profilingLibraries",""),("propagatedBuildInputs",""),("propagatedNativeBuildInputs",""),("separateDebugInfo","1"),("src","/nix/store/l66b2j7crhj29wk7sx4nycbq55np9fvh-glibc-2.40.tar.xz"),("static","/nix/store/zbjpjqdlx48gw2p2107r4kybdhvf3fnk-glibc-2.40-36-static"),("stdenv","/nix/store/fj3gbj037zvfly8495d27i76fk9szx97-bootstrap-stage2-stdenv-linux"),("strictDeps","1"),("system","aarch64-linux"),("version","2.40-36")])