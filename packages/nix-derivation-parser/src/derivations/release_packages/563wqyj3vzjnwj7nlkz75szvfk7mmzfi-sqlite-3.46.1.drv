Derive([("bin","/nix/store/dq62dc2f8jv61lsb4m5a5gawgglyxbnc-sqlite-3.46.1-bin","",""),("debug","/nix/store/wpbwgq7yri38z1c5qc2m9ncqxb6sgqmy-sqlite-3.46.1-debug","",""),("dev","/nix/store/42403yibks7lq5rly9j5n26z8im7lvzh-sqlite-3.46.1-dev","",""),("doc","/nix/store/w54kzd9w6wk3d31gfvdxkk20168x59kc-sqlite-3.46.1-doc","",""),("man","/nix/store/cgm8aqydlvnaiq8k2sfffjmcah143xni-sqlite-3.46.1-man","",""),("out","/nix/store/a00dfl8fpsl849jflxq9zxb7ycxanv2i-sqlite-3.46.1","","")],[("/nix/store/0kfziza5wxn9jmjbcyfjr9q4gl753hbq-sqlite-autoconf-3460100.tar.gz.drv",["out"]),("/nix/store/1wf003zf8kkj6krjdj3jgv7qcbfkssgz-bash-5.2p37.drv",["out"]),("/nix/store/6mdjvw87vingnsqnin49sz019hfslksb-update-autotools-gnu-config-scripts-hook.drv",["out"]),("/nix/store/8f2yz681rgrk20rww9d0z7w0f10zga62-zlib-1.3.1.drv",["dev"]),("/nix/store/h0wnwf5lb39m47nmviyy7ml113jy2m0j-sqlite-doc-3460100.zip.drv",["out"]),("/nix/store/l0rlvafgj42zya8b8820v5bbxicgbbk6-stdenv-linux.drv",["out"]),("/nix/store/zclmpkpv9n25qpf2ny339cs33bxjrmbw-unzip-6.0.drv",["out"])],["/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh","/nix/store/xicrk4waf3kazyf96aaavsirgx241r0s-separate-debug-info.sh"],"aarch64-linux","/nix/store/4vvkmiq95x6zzz82lcsbq8607x5v7aws-bash-5.2p37/bin/bash",["-e","/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh"],[("NIX_CFLAGS_COMPILE","-DSQLITE_ENABLE_COLUMN_METADATA -DSQLITE_ENABLE_DBSTAT_VTAB -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS3_TOKENIZER -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_STMT_SCANSTATUS -DSQLITE_ENABLE_UNLOCK_NOTIFY -DSQLITE_SOUNDEX -DSQLITE_SECURE_DELETE -DSQLITE_MAX_VARIABLE_NUMBER=250000 -DSQLITE_MAX_EXPR_DEPTH=10000"),("__structuredAttrs",""),("bin","/nix/store/dq62dc2f8jv61lsb4m5a5gawgglyxbnc-sqlite-3.46.1-bin"),("buildInputs","/nix/store/nbcm7viydknijmak98kwcsgv384x31fv-zlib-1.3.1-dev"),("builder","/nix/store/4vvkmiq95x6zzz82lcsbq8607x5v7aws-bash-5.2p37/bin/bash"),("cmakeFlags",""),("configureFlags","--enable-threadsafe"),("debug","/nix/store/wpbwgq7yri38z1c5qc2m9ncqxb6sgqmy-sqlite-3.46.1-debug"),("depsBuildBuild",""),("depsBuildBuildPropagated",""),("depsBuildTarget",""),("depsBuildTargetPropagated",""),("depsHostHost",""),("depsHostHostPropagated",""),("depsTargetTarget",""),("depsTargetTargetPropagated",""),("dev","/nix/store/42403yibks7lq5rly9j5n26z8im7lvzh-sqlite-3.46.1-dev"),("doCheck",""),("doInstallCheck",""),("doc","/nix/store/w54kzd9w6wk3d31gfvdxkk20168x59kc-sqlite-3.46.1-doc"),("docsrc","/nix/store/vr9dkzr4kdnsimys82hcvhd36lpbznrq-sqlite-doc-3460100.zip"),("man","/nix/store/cgm8aqydlvnaiq8k2sfffjmcah143xni-sqlite-3.46.1-man"),("mesonFlags",""),("name","sqlite-3.46.1"),("nativeBuildInputs","/nix/store/q6c6dch9lzf10iqi9n6fq0zzns2l52k8-update-autotools-gnu-config-scripts-hook /nix/store/zf7psadkf0vkf5bdynb1gach8sfb9aki-unzip-6.0 /nix/store/xicrk4waf3kazyf96aaavsirgx241r0s-separate-debug-info.sh"),("out","/nix/store/a00dfl8fpsl849jflxq9zxb7ycxanv2i-sqlite-3.46.1"),("outputs","bin dev man doc out debug"),("patches",""),("pname","sqlite"),("postInstall","# Do not contaminate dependent libtool-based projects with sqlite dependencies.\nsed -i $out/lib/libsqlite3.la -e \"s/dependency_libs=.*/dependency_libs=''/\"\n\nmkdir -p $doc/share/doc\nunzip $docsrc\nmv sqlite-doc-3460100 $doc/share/doc/sqlite\n"),("preBuild","# Use pread(), pread64(), pwrite(), pwrite64() functions for better performance if they are available.\nif cc -Werror=implicit-function-declaration -x c - -o \"$TMPDIR/pread_pwrite_test\" <<< \\\n  $'#include <unistd.h>\\nint main()\\n{\\n  pread(0, NULL, 0, 0);\\n  pwrite(0, NULL, 0, 0);\\n  return 0;\\n}'; then\n  export NIX_CFLAGS_COMPILE=\"$NIX_CFLAGS_COMPILE -DUSE_PREAD\"\nfi\nif cc -Werror=implicit-function-declaration -x c - -o \"$TMPDIR/pread64_pwrite64_test\" <<< \\\n  $'#include <unistd.h>\\nint main()\\n{\\n  pread64(0, NULL, 0, 0);\\n  pwrite64(0, NULL, 0, 0);\\n  return 0;\\n}'; then\n  export NIX_CFLAGS_COMPILE=\"$NIX_CFLAGS_COMPILE -DUSE_PREAD64\"\nelif cc -D_LARGEFILE64_SOURCE -Werror=implicit-function-declaration -x c - -o \"$TMPDIR/pread64_pwrite64_test\" <<< \\\n  $'#include <unistd.h>\\nint main()\\n{\\n  pread64(0, NULL, 0, 0);\\n  pwrite64(0, NULL, 0, 0);\\n  return 0;\\n}'; then\n  export NIX_CFLAGS_COMPILE=\"$NIX_CFLAGS_COMPILE -DUSE_PREAD64 -D_LARGEFILE64_SOURCE\"\nfi\n\n# Necessary for FTS5 on Linux\nexport NIX_CFLAGS_LINK=\"$NIX_CFLAGS_LINK -lm\"\n\necho \"\"\necho \"NIX_CFLAGS_COMPILE = $NIX_CFLAGS_COMPILE\"\necho \"\"\n"),("preConfigure","patchShebangs configure\n"),("propagatedBuildInputs",""),("propagatedNativeBuildInputs",""),("separateDebugInfo","1"),("src","/nix/store/lhpx0mr4v25l6j21nws0wkgcjj5cfbh0-sqlite-autoconf-3460100.tar.gz"),("stdenv","/nix/store/w9gi57l2p92yaskz2rxrwilir7g4f32f-stdenv-linux"),("strictDeps",""),("system","aarch64-linux"),("version","3.46.1")])