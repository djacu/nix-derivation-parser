Derive([("bin","/nix/store/gz6xbzz93ynqi8bb0dqawd5g8qpb52yv-sqlite-3.46.1-bin","",""),("dev","/nix/store/w41fjzsvxs2z8dvxhz0m2v7m6p3jbpvw-sqlite-3.46.1-dev","",""),("doc","/nix/store/2vnp5ivaqhl6fhzr70viyinr7wxc2sch-sqlite-3.46.1-doc","",""),("man","/nix/store/czkagyyjysqg178byvwy407kbgwqms5r-sqlite-3.46.1-man","",""),("out","/nix/store/5jcgl3pxsqfnpy1ax46gv3s82cpl25v3-sqlite-3.46.1","","")],[("/nix/store/45ybjg61bam2rrd8xhaw3nwqb98m1zih-unzip-6.0.drv",["out"]),("/nix/store/4z3k7lmwn22z9dl793zd3jyml0a1wc4h-update-autotools-gnu-config-scripts-hook.drv",["out"]),("/nix/store/7yi6p5awm11k4grm5pqaq6ml1s3czr4z-bash-5.2p37.drv",["out"]),("/nix/store/9di46lmjhrd17g6hhzyl3zd9zdrf3ghb-sqlite-doc-3460100.zip.drv",["out"]),("/nix/store/b8kqh8nv63yh6g1dhmbpvlsmifbsj3mv-sqlite-autoconf-3460100.tar.gz.drv",["out"]),("/nix/store/hfmbg06zgxyhj5whbyskiicah4hz704f-stdenv-darwin.drv",["out"]),("/nix/store/ljyjimnyj1n8pfdlgk6pz5z64i32szdm-zlib-1.3.1.drv",["dev"])],["/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh"],"aarch64-darwin","/nix/store/sk8z3kdy6iaky6sg972k6fkh3iw2rn3d-bash-5.2p37/bin/bash",["-e","/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh"],[("NIX_CFLAGS_COMPILE","-DSQLITE_ENABLE_COLUMN_METADATA -DSQLITE_ENABLE_DBSTAT_VTAB -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS3_TOKENIZER -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_STMT_SCANSTATUS -DSQLITE_ENABLE_UNLOCK_NOTIFY -DSQLITE_SOUNDEX -DSQLITE_SECURE_DELETE -DSQLITE_MAX_VARIABLE_NUMBER=250000 -DSQLITE_MAX_EXPR_DEPTH=10000"),("__darwinAllowLocalNetworking",""),("__impureHostDeps","/bin/sh /usr/lib/libSystem.B.dylib /usr/lib/system/libunc.dylib /dev/zero /dev/random /dev/urandom /bin/sh"),("__propagatedImpureHostDeps",""),("__propagatedSandboxProfile",""),("__sandboxProfile",""),("__structuredAttrs",""),("bin","/nix/store/gz6xbzz93ynqi8bb0dqawd5g8qpb52yv-sqlite-3.46.1-bin"),("buildInputs","/nix/store/bx5p9dfdmsryflrfrvwdqnkbh3ll9glz-zlib-1.3.1-dev"),("builder","/nix/store/sk8z3kdy6iaky6sg972k6fkh3iw2rn3d-bash-5.2p37/bin/bash"),("cmakeFlags",""),("configureFlags","--enable-threadsafe"),("depsBuildBuild",""),("depsBuildBuildPropagated",""),("depsBuildTarget",""),("depsBuildTargetPropagated",""),("depsHostHost",""),("depsHostHostPropagated",""),("depsTargetTarget",""),("depsTargetTargetPropagated",""),("dev","/nix/store/w41fjzsvxs2z8dvxhz0m2v7m6p3jbpvw-sqlite-3.46.1-dev"),("doCheck",""),("doInstallCheck",""),("doc","/nix/store/2vnp5ivaqhl6fhzr70viyinr7wxc2sch-sqlite-3.46.1-doc"),("docsrc","/nix/store/vr9dkzr4kdnsimys82hcvhd36lpbznrq-sqlite-doc-3460100.zip"),("man","/nix/store/czkagyyjysqg178byvwy407kbgwqms5r-sqlite-3.46.1-man"),("mesonFlags",""),("name","sqlite-3.46.1"),("nativeBuildInputs","/nix/store/4h5ys1hnjfcgqbfhqab1pygdcm9i5ad9-update-autotools-gnu-config-scripts-hook /nix/store/amfcwqv0zsh2jcws574yn80pasls47q8-unzip-6.0"),("out","/nix/store/5jcgl3pxsqfnpy1ax46gv3s82cpl25v3-sqlite-3.46.1"),("outputs","bin dev man doc out"),("patches",""),("pname","sqlite"),("postInstall","# Do not contaminate dependent libtool-based projects with sqlite dependencies.\nsed -i $out/lib/libsqlite3.la -e \"s/dependency_libs=.*/dependency_libs=''/\"\n\nmkdir -p $doc/share/doc\nunzip $docsrc\nmv sqlite-doc-3460100 $doc/share/doc/sqlite\n"),("preBuild","# Use pread(), pread64(), pwrite(), pwrite64() functions for better performance if they are available.\nif cc -Werror=implicit-function-declaration -x c - -o \"$TMPDIR/pread_pwrite_test\" <<< \\\n  $'#include <unistd.h>\\nint main()\\n{\\n  pread(0, NULL, 0, 0);\\n  pwrite(0, NULL, 0, 0);\\n  return 0;\\n}'; then\n  export NIX_CFLAGS_COMPILE=\"$NIX_CFLAGS_COMPILE -DUSE_PREAD\"\nfi\nif cc -Werror=implicit-function-declaration -x c - -o \"$TMPDIR/pread64_pwrite64_test\" <<< \\\n  $'#include <unistd.h>\\nint main()\\n{\\n  pread64(0, NULL, 0, 0);\\n  pwrite64(0, NULL, 0, 0);\\n  return 0;\\n}'; then\n  export NIX_CFLAGS_COMPILE=\"$NIX_CFLAGS_COMPILE -DUSE_PREAD64\"\nelif cc -D_LARGEFILE64_SOURCE -Werror=implicit-function-declaration -x c - -o \"$TMPDIR/pread64_pwrite64_test\" <<< \\\n  $'#include <unistd.h>\\nint main()\\n{\\n  pread64(0, NULL, 0, 0);\\n  pwrite64(0, NULL, 0, 0);\\n  return 0;\\n}'; then\n  export NIX_CFLAGS_COMPILE=\"$NIX_CFLAGS_COMPILE -DUSE_PREAD64 -D_LARGEFILE64_SOURCE\"\nfi\n\n# Necessary for FTS5 on Linux\nexport NIX_CFLAGS_LINK=\"$NIX_CFLAGS_LINK -lm\"\n\necho \"\"\necho \"NIX_CFLAGS_COMPILE = $NIX_CFLAGS_COMPILE\"\necho \"\"\n"),("preConfigure","patchShebangs configure\n"),("propagatedBuildInputs",""),("propagatedNativeBuildInputs",""),("separateDebugInfo",""),("src","/nix/store/lhpx0mr4v25l6j21nws0wkgcjj5cfbh0-sqlite-autoconf-3460100.tar.gz"),("stdenv","/nix/store/lnlzcyd5sy2c4x8ys85627sj5mdxmdxq-stdenv-darwin"),("strictDeps",""),("system","aarch64-darwin"),("version","3.46.1")])