Derive([("debug","","r:sha256",""),("out","","r:sha256","")],[("/nix/store/4bi7yck1dzvpy83bx6imlgj8yk1p1ghy-autoreconf-hook.drv",["out"]),("/nix/store/84avns0b263wh6b257v0vmwk7xw0ibgv-stdenv-linux.drv",["out"]),("/nix/store/8a2gb1nzcpkgzkv56szlxnwwvq78g83r-mpdecimal-4.0.0.drv",["dev","out"]),("/nix/store/9ki1j0w04imbx5w6fkb3snjqslb986z7-nuke-references.drv",["out"]),("/nix/store/asp4n3h96zh7v6y6812hcx0g3a6rgb60-readline-8.2p13.drv",["dev","out"]),("/nix/store/fvlpkb9iczpg6lq516jdr5q2a9nc1hma-Python-3.12.7.tar.xz.drv",["out"]),("/nix/store/g9pcql9n0wnfa5h3y974yka2j5qnla3v-xz-5.6.3.drv",["dev","out"]),("/nix/store/gld19hknyxw2z5bygigjh59lcpisf0ir-zlib-1.3.1.drv",["dev","out"]),("/nix/store/h66b1z4y7p7942kgdklm39jhwkbxh0m3-python-setup-hook.sh.drv",["out"]),("/nix/store/hiwwdafqclywl0jrbv6wcas9w8mz8cj4-sqlite-3.46.1.drv",["dev","out"]),("/nix/store/iqv1l4xp142j7ma87br2aplvssm6m97x-gdbm-1.24.drv",["dev","lib"]),("/nix/store/kvhc6iyqmbhg524v4zwi3b835f8abdkm-bzip2-1.0.8.drv",["dev","out"]),("/nix/store/l0mwpbmvcciap36zihfcv7hlfdgz7asb-openssl-3.3.2.drv",["dev","out"]),("/nix/store/l3k47ga0c90rq0dkfk3hnv67igxyjx6w-pkg-config-wrapper-0.29.2.drv",["out"]),("/nix/store/l9dz4mhdcfcg4bsj8r021rby4rrd52p6-expat-2.6.4.drv",["dev","out"]),("/nix/store/mv4d69ipg4hqsmsmi8yxa145dk5vbcn0-libffi-3.4.6.drv",["dev","out"]),("/nix/store/ncy9vjbir39pxjkgb46k691sfpfn3c8p-libxcrypt-4.4.36.drv",["out"]),("/nix/store/nyq7949svnx6axh6zczq97mw8ys5n90c-ncurses-6.4.20221231.drv",["dev","out"]),("/nix/store/pwwz4waxc23l36vr8f22ss3gjhnmmrq0-autoconf-archive-2024.10.16.drv",["out"]),("/nix/store/q88bs5ppiphc74svw85wx0pqp3i7zbb3-tzdata-2024b.drv",["dev","out"]),("/nix/store/v866f3gn7j07pyk0z3zn9280bav9yszr-mailcap-2.1.54.drv",["out"]),("/nix/store/w3xjr881bg27yr4f274kqvr0bd8k0c97-bash-5.2p37.drv",["dev","out"])],["/nix/store/7f26mgj9vx5izbkbfirkd4m0dyxlrkvv-platform-triplet-detection.patch","/nix/store/gx4pa1m75g8rrrggj7gi3bg38m4lg3q5-sitecustomize.py","/nix/store/lpfs02z2i2hamz9f50p4bz6v0fs0600j-mimetypes.patch","/nix/store/r112dk8w7zvdjipki58ch00m825li7fq-virtualenv-permissions.patch","/nix/store/s5myj3ybdn7wrsfpydj48mm24vnvw6bc-no-ldconfig.patch","/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh","/nix/store/xicrk4waf3kazyf96aaavsirgx241r0s-separate-debug-info.sh"],"x86_64-linux","/106gbyghamnnlrj580l6fcr98cpc1zaqgsbrnakgainp3i0724k2/bin/bash",["-e","/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh"],[("CPPFLAGS","-I/1li0990v56005bjfkh4n8i61d7g3liqcsixnjwpxj1ryrn4gyqgg/include -I/1hqh609phn3jcrc17151kg3j431z3zf2d8y8y3ljv96gnx1xqrln/include -I/0mw8kf416fnyrmj87sb157cq0smssbknhwh9avz6l2aqkplppirw/include -I/0ar0kp7gicv00niji4f18xini7z4nvc1rgx07bjirkg0lza5wp0k/include -I/0hyi27x27903bbr21pp66qb5d6vhk7mrjqwhlsijr909a99arpza/include -I/100hlq0yflbb1xwr256vjvkj5j5vdcp6ifgzpdw32xrviyy8s3k9/include -I/1p58w36q4mhh4h4g1hv67bnf76xciis6dfbvfka1zjwmh0cbc35j/include -I/0xzssjw6p2wha0pq4hd936dygbnflrdsgdy3r18pxi41v1ncnq6x/include -I/0ab30synpkqjgzfk5x7wii9mi3h1b9v4x4nmzcd7vghs89gwcxhy/include -I/0jm3frji2g7hpxhiynlhq1c9531g4jcsddac8y25qn67fqwsvkag/include -I/105r53r6020wyh52rm0zl3lrzi12r2sl8sqyjyk9zrdvf3g7qby8/include -I/181wvyb9zgz23mc5l42n9cc6dm1nlkyyjf8asyb2r52q4c1r4rda/include -I/104gh1hp9y6bpsl9jf2b44jilr0nq87ma1v833pm6r6n9h3xy7b4/include"),("LDFLAGS","-L/195acw4hbi2679x1al95glqbvyz3mclm7d798kwx7qvjbphms0f5/lib -L/18ka1gadmwc4j5srbd3shprbh1vm6s8a3mbjkr50a0qrci2z4hxj/lib -L/0kl3i9mfr0h7b9lrasv3c34jg576dzlvnm2xf0jd5j9sdp8546g5/lib -L/0ar0kp7gicv00niji4f18xini7z4nvc1rgx07bjirkg0lza5wp0k/lib -L/0pzfd83vx0m2yc2gnzg0rk3hrfgrznvdmq7cn2ff1zi9fqv7r2jj/lib -L/1qqimqk59lz29c0a0rlsqg4lmpfv75xx28x5i2qvnjch09am06v1/lib -L/10r6a5b6i8skw5299qvmbyr9ir6dhv0pl5k11blyp9i7jhrj3zgm/lib -L/08dv6wfcwz11p5xfw3c5v34zhdzg4ld4msc0jlpv4z4i6vrmrghs/lib -L/103lp3rdaaszvxjkzyis76j0vsllx0mhjzpxzbc219b1insrcns5/lib -L/0kmbq0yvxgbiwa6akafq9b8cvdjgxiylzzf8vx2kaz426zmwcwzl/lib -L/0scapbyr55zv9ga11a6a6m80dhggl9lck6k17zbxhfg638fy5dqy/lib -L/1jv22gwkp8ig761q40asax7xmqyr8wcl57mlly6d96jqpvg821rc/lib -L/0i5kkv0kwfk27i0rkkcqyfhxf9f15pn6lgys70vlgb7ghnn2xrgf/lib"),("LIBS","-lcrypt"),("NIX_LDFLAGS","-lgcc_s"),("PYTHONHASHSEED","0"),("__structuredAttrs",""),("buildInputs","/1ynldhqxqb0lcvam2va42fi3ayyvgnpgp6sbvyc5r6lfp6zpff6w /1li0990v56005bjfkh4n8i61d7g3liqcsixnjwpxj1ryrn4gyqgg /1hqh609phn3jcrc17151kg3j431z3zf2d8y8y3ljv96gnx1xqrln /0mw8kf416fnyrmj87sb157cq0smssbknhwh9avz6l2aqkplppirw /0ar0kp7gicv00niji4f18xini7z4nvc1rgx07bjirkg0lza5wp0k /0hyi27x27903bbr21pp66qb5d6vhk7mrjqwhlsijr909a99arpza /100hlq0yflbb1xwr256vjvkj5j5vdcp6ifgzpdw32xrviyy8s3k9 /1p58w36q4mhh4h4g1hv67bnf76xciis6dfbvfka1zjwmh0cbc35j /0xzssjw6p2wha0pq4hd936dygbnflrdsgdy3r18pxi41v1ncnq6x /0ab30synpkqjgzfk5x7wii9mi3h1b9v4x4nmzcd7vghs89gwcxhy /0jm3frji2g7hpxhiynlhq1c9531g4jcsddac8y25qn67fqwsvkag /105r53r6020wyh52rm0zl3lrzi12r2sl8sqyjyk9zrdvf3g7qby8 /181wvyb9zgz23mc5l42n9cc6dm1nlkyyjf8asyb2r52q4c1r4rda /104gh1hp9y6bpsl9jf2b44jilr0nq87ma1v833pm6r6n9h3xy7b4"),("builder","/106gbyghamnnlrj580l6fcr98cpc1zaqgsbrnakgainp3i0724k2/bin/bash"),("cmakeFlags",""),("configureFlags","--without-ensurepip --with-system-expat --with-system-libmpdec --with-openssl=/1p58w36q4mhh4h4g1hv67bnf76xciis6dfbvfka1zjwmh0cbc35j --with-tzpath=/0scapbyr55zv9ga11a6a6m80dhggl9lck6k17zbxhfg638fy5dqy/share/zoneinfo --with-lto --enable-shared --enable-loadable-sqlite-extensions CFLAGS=-I/0ar0kp7gicv00niji4f18xini7z4nvc1rgx07bjirkg0lza5wp0k/include LIBS=-L/0ar0kp7gicv00niji4f18xini7z4nvc1rgx07bjirkg0lza5wp0k/lib ac_cv_func_lchmod=no"),("debug","/1k7af0a6abdk51bgf8idbn458a9b95n3lg3374g9cgssag6y8gd2"),("depsBuildBuild",""),("depsBuildBuildPropagated",""),("depsBuildTarget",""),("depsBuildTargetPropagated",""),("depsHostHost",""),("depsHostHostPropagated",""),("depsTargetTarget",""),("depsTargetTargetPropagated",""),("disallowedReferences","/1p58w36q4mhh4h4g1hv67bnf76xciis6dfbvfka1zjwmh0cbc35j"),("doCheck",""),("doInstallCheck",""),("enableParallelBuilding","1"),("enableParallelChecking","1"),("enableParallelInstalling","1"),("mesonFlags",""),("name","python3-3.12.7"),("nativeBuildInputs","/0r0dnacdnhbdhsvh7b7p0wxbw3zp4zl68qg6h7dwln7sz12hid0q /198a8ka2v3ix8mn2s0ch5q91ssy3bzixhn7a8mxgar37w614fk4c /0cgwdczksfz20hab8g0ld7pb7j99prhwafmyqi226r7dh8xrcijy /0v57zn3yn8gyl66vw1jzdwck4dpch25cjqkkgqp9d7qlcy81m7n5 /nix/store/xicrk4waf3kazyf96aaavsirgx241r0s-separate-debug-info.sh"),("out","/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9"),("outputHashAlgo","sha256"),("outputHashMode","recursive"),("outputs","out debug"),("patches","/nix/store/s5myj3ybdn7wrsfpydj48mm24vnvw6bc-no-ldconfig.patch /nix/store/r112dk8w7zvdjipki58ch00m825li7fq-virtualenv-permissions.patch /nix/store/lpfs02z2i2hamz9f50p4bz6v0fs0600j-mimetypes.patch /nix/store/7f26mgj9vx5izbkbfirkd4m0dyxlrkvv-platform-triplet-detection.patch"),("pname","python3"),("postFixup","# https://github.com/python/cpython/blob/e488e300f5c01289c10906c2e53a8e43d6de32d8/configure.ac#L78\nsysconfigdataName=\"$(make --eval $'print-sysconfigdata-name:\n\\t@echo _sysconfigdata_$(ABIFLAGS)_$(MACHDEP)_$(MULTIARCH) ' print-sysconfigdata-name)\"\n\n# The CPython interpreter contains a _sysconfigdata_<platform specific suffix>\n# module that is imported by the sysconfig and distutils.sysconfig modules.\n# The sysconfigdata module is generated at build time and contains settings\n# required for building Python extension modules, such as include paths and\n# other compiler flags. By default, the sysconfigdata module is loaded from\n# the currently running interpreter (ie. the build platform interpreter), but\n# when cross-compiling we want to load it from the host platform interpreter.\n# This can be done using the _PYTHON_SYSCONFIGDATA_NAME environment variable.\n# The _PYTHON_HOST_PLATFORM variable also needs to be set to get the correct\n# platform suffix on extension modules. The correct values for these variables\n# are not documented, and must be derived from the configure script (see links\n# below).\ncat <<EOF >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"\\$1\" = '$out' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-x86_64'\n    export _PYTHON_SYSCONFIGDATA_NAME='$sysconfigdataName'\n  fi\n}\n\naddEnvHooks \"\\$hostOffset\" sysconfigdataHook\nEOF\n"),("postInstall","# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.12/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.12/test/__init__.py\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\nln -sL \"$out/share/man/man1/python3.1.gz\" \"$out/share/man/man1/python.1.gz\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.12/_sysconfigdata*.py $out/lib/python3.12/config-312*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /0ar0kp7gicv00niji4f18xini7z4nvc1rgx07bjirkg0lza5wp0k -e /0scapbyr55zv9ga11a6a6m80dhggl9lck6k17zbxhfg638fy5dqy '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /0ar0kp7gicv00niji4f18xini7z4nvc1rgx07bjirkg0lza5wp0k -e /0scapbyr55zv9ga11a6a6m80dhggl9lck6k17zbxhfg638fy5dqy '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.12/site-packages\"\nln -s \"$out/lib/python3.12/\"_sysconfigdata*.py \"$out/lib/python3.12/site-packages/\"\n# Include a sitecustomize.py file\ncp /nix/store/gx4pa1m75g8rrrggj7gi3bg38m4lg3q5-sitecustomize.py $out/lib/python3.12/site-packages/sitecustomize.py\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# Python 3.7 implements PEP 552, introducing support for deterministic bytecode.\n# compileall uses the therein introduced checked-hash method by default when\n# `SOURCE_DATE_EPOCH` is set.\n# We exclude lib2to3 because that's Python 2 code which fails\n# We build 3 levels of optimized bytecode. Note the default level, without optimizations,\n# is not reproducible yet. https://bugs.python.org/issue29708\n# Not creating bytecode will result in a large performance loss however, so we do build it.\nfind $out -name \"*.py\" | $out/bin/python -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -O  -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -OO -m compileall -q -f -x \"lib2to3\" -i -\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n\n# Disable system-wide pip installation. See https://peps.python.org/pep-0668/.\ncat <<'EXTERNALLY_MANAGED' > $out/lib/python3.12/EXTERNALLY-MANAGED\n[externally-managed]\nError=This command has been disabled as it tries to modify the immutable\n `/nix/store` filesystem.\n\n To use Python with Nix and nixpkgs, have a look at the online documentation:\n <https://nixos.org/manual/nixpkgs/stable/#python>.\nEXTERNALLY_MANAGED\n"),("postPatch","substituteInPlace Lib/subprocess.py \\\n  --replace-fail \"'/bin/sh'\" \"'/106gbyghamnnlrj580l6fcr98cpc1zaqgsbrnakgainp3i0724k2/bin/sh'\"\nsubstituteInPlace Lib/mimetypes.py \\\n  --replace-fail \"@mime-types@\" \"/1a25afz6v40w25lii8nc5h4mx9x2hx70rrvhx2hbsvm6sv6zcmw2\"\n"),("preConfigure","# Attempt to purify some of the host info collection\nsed -E -i -e 's/uname -r/echo/g' -e 's/uname -n/echo nixpkgs/g' config.guess\nsed -E -i -e 's/uname -r/echo/g' -e 's/uname -n/echo nixpkgs/g' configure\n# Also override the auto-detection in `configure`.\nsubstituteInPlace configure \\\n  --replace-fail 'libmpdec_machine=universal' 'libmpdec_machine=x64'\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"),("preFixup",""),("prePatch",""),("propagatedBuildInputs",""),("propagatedNativeBuildInputs",""),("separateDebugInfo","1"),("setupHook","/1j93m3g3j018qa69xffjgcrik3697n7g1b2462s4h0n304phznr8"),("src","/nix/store/ixlxlyp22scrw1xhl9i6p4hz9knq8fk7-Python-3.12.7.tar.xz"),("stdenv","/1aipp690wc31xkcjpxmf60p9jxvr9pz0nhlh5z0f1lh095syp33k"),("strictDeps",""),("system","x86_64-linux"),("version","3.12.7")])