Derive([("out","","r:sha256","")],[("/nix/store/4hz87gnw1wyxghx0vrn9av6r5x32k80x-xz-5.6.3.drv",["dev","out"]),("/nix/store/6242dqkwpwq389gyc05rllsxk615ygxn-nuke-references.drv",["out"]),("/nix/store/83idlpbinv8c3rcrzwgx5dy6103sgimn-zlib-1.3.1.drv",["dev","out"]),("/nix/store/9wk3l0zzdy1m8yvw6s0qilx7xrv7vjfw-expat-2.6.4.drv",["dev","out"]),("/nix/store/aiaihpcjm6498gi92dnx9xxmfnjg71jx-stdenv-darwin.drv",["out"]),("/nix/store/b4a8sx5ng4c32p2chj2a42fcs1dqpmyg-bzip2-1.0.8.drv",["dev","out"]),("/nix/store/ddg9d70j6biq3wwbg2kv057bkpybsjb1-python-setup-hook.sh.drv",["out"]),("/nix/store/dpn5ymwqzn51j8rj8227s4610r9n55jl-readline-8.2p13.drv",["dev","out"]),("/nix/store/dw3snhpq4mb8yhk452a11abph5yj0zxy-mpdecimal-4.0.0.drv",["dev","out"]),("/nix/store/i04w7nm7i4im9mw6k23nab968r624508-mailcap-2.1.54.drv",["out"]),("/nix/store/i9jdx7094c4zh2ams3x41chhdgj2g8ws-libxcrypt-4.4.36.drv",["out"]),("/nix/store/k1f6r0rjk7z00sy2axfig3f8a2p5cjc6-Python-3.12.7.tar.xz.drv",["out"]),("/nix/store/l9a0m240b9kyj4lc0m187f37maj1y8si-gdbm-1.24.drv",["dev","lib"]),("/nix/store/ncarjnzk1iyk6wbvp6mz23rb6hba444y-bash-5.2p37.drv",["dev","out"]),("/nix/store/qwnz6vmnx3jr5gzgmisypkiwzxd5njz3-ncurses-6.4.20221231.drv",["dev","out"]),("/nix/store/r5lkv9x8yq4kxg1flmk0l7w8yla2rz6w-openssl-3.3.2.drv",["dev","out"]),("/nix/store/r6gcl4rc3c4jv9shxabm9wz32ppn7jkb-libffi-3.4.6.drv",["dev","out"]),("/nix/store/rfs73hskcdmq2mcm0b0101n91g12ny8i-apple-sdk-11.3.drv",["out"]),("/nix/store/wg9vbr70ygbkhd2ca8hyy29malcpakka-tzdata-2024b.drv",["dev","out"]),("/nix/store/x96hs4pn9vgiknp4kjjkyh30q425fzam-sqlite-3.46.1.drv",["dev","out"]),("/nix/store/ym7x7qba1c9wk9ndprdqgs11k8416kd2-llvm-16.0.6.drv",["out"])],["/nix/store/7f26mgj9vx5izbkbfirkd4m0dyxlrkvv-platform-triplet-detection.patch","/nix/store/gx4pa1m75g8rrrggj7gi3bg38m4lg3q5-sitecustomize.py","/nix/store/lpfs02z2i2hamz9f50p4bz6v0fs0600j-mimetypes.patch","/nix/store/r112dk8w7zvdjipki58ch00m825li7fq-virtualenv-permissions.patch","/nix/store/s5myj3ybdn7wrsfpydj48mm24vnvw6bc-no-ldconfig.patch","/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh"],"aarch64-darwin","/1k55hwwi52xi4q84lw5an9fibhm50w9yin23njm3g2km7pklq0h2/bin/bash",["-e","/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh"],[("CPPFLAGS","-I/1q2sdan8nzi71x2s8i8s65gbzx0fpgalqgshg99kl9g7d19cz6kk/include -I/0n6xa6r6hn9q2159r64z6i1qamwy1v4269d4wn2w3ms1a64gmr6w/include -I/0v0wh6dszvy8j2fhxy2vhsh7z9clnmj1bwhq69mgshkxd3wnrvrv/include -I/1658y9zaz3jzsdj1qjphhjpl0gx9ijn6ajrd87q985ss7zlbq02d/include -I/0902ilqnm67v3s6wssk4baan166d6dyxqkl999vxqvbnz4fzaici/include -I/1xv6dvljbwyxlgm1pkjcgyjk8jxb935j5as72qsv6na5859pbsyx/include -I/0war95qwvn866qk4y86xdrfhrsggib72pw82jnzkdkw1d91jhp5n/include -I/1c47b61jpkrkwhypnsjvprpbc2zgyfci7achpwrg5lln8sxglnhw/include -I/0pfsj0262yhr5n96p1819zb1a4z6cgn0ginjmhgm4h6608bhv219/include -I/1wjf69ypblm9vzygl8ffakg2yq7w1brv1dz6njj463bks37gdfnv/include -I/1dpixy44h5bciy06g12580a6nqchjgnr3ibmkn42qj2yq9ncq638/include -I/077dvck378y0lvl51ml4nvja25q2rv4xv9hr936bnhvb8qarqki9/include -I/0y1blj50zrgkkg5zkjs2cgm4s9ai5kll8vgynxpx0k26m1y24aar/include -I/0hyfvv223a23z4b4j4gqjfcgif43rwwf179xymxd7fnzgsmpchf4/include"),("LDFLAGS","-L/19qmczf86bn6fhhyf0kgn3gcki2sg7fkm2yshp9860ic2snz6na6/lib -L/1i0q45sqyiwdzcalb3xqfxpb222qrardzf0jhxngjxwrwqa5c7rh/lib -L/0rj37bb9rpj6wzghw6n5a3m61fb3sl434jnpn8dl8mn7h7akksnw/lib -L/1658y9zaz3jzsdj1qjphhjpl0gx9ijn6ajrd87q985ss7zlbq02d/lib -L/1s259n0abv6vs82qbjvansdsy0jjdslqc4appfqr5c95skv8jchc/lib -L/07nybsb3vw508nkrvbrvk24cs6j09ahkzhnk5cvlimcy0drfir4g/lib -L/0qjyn1gn6lxkb5x4g8rh3vwgj042gk4vkkancyydmilab3ad6naf/lib -L/0727v8a7p0h5dhldmzlwb2vg2472qa438lxi70jv45wv4b4xh8rr/lib -L/1578cg186lqkr4ccs4qjkbv6iagvpm0bg3vymhaikzd4jdgwwwbv/lib -L/0cp2bqlnsh32h9plvkdpw4v5anabsq91clr8ipflc97q99c00x54/lib -L/1dpixy44h5bciy06g12580a6nqchjgnr3ibmkn42qj2yq9ncq638/lib -L/0ix53q4s751ar9l8spv2514y1msfpm7xz7k5mz69vrmpq4flzpqr/lib -L/0hhnbvfirzfbivahqjq3ipsnsl7h1kpfryi0c4rkvq8cn3kgjisw/lib -L/1swr4193bfr8j6fndzpdx4zx02j4a7k9f8cfzn44sxnx5ja9kq1q/lib"),("LIBS",""),("NIX_LDFLAGS",""),("PYTHONHASHSEED","0"),("__darwinAllowLocalNetworking",""),("__impureHostDeps","/bin/sh /usr/lib/libSystem.B.dylib /usr/lib/system/libunc.dylib /dev/zero /dev/random /dev/urandom /bin/sh"),("__propagatedImpureHostDeps",""),("__propagatedSandboxProfile",""),("__sandboxProfile",""),("__structuredAttrs",""),("buildInputs","/0w8yag2qmxyp64qwi8wmz0kc725mns5ncq4qm50khssffm0wxqmx /1q2sdan8nzi71x2s8i8s65gbzx0fpgalqgshg99kl9g7d19cz6kk /0n6xa6r6hn9q2159r64z6i1qamwy1v4269d4wn2w3ms1a64gmr6w /0v0wh6dszvy8j2fhxy2vhsh7z9clnmj1bwhq69mgshkxd3wnrvrv /1658y9zaz3jzsdj1qjphhjpl0gx9ijn6ajrd87q985ss7zlbq02d /0902ilqnm67v3s6wssk4baan166d6dyxqkl999vxqvbnz4fzaici /1xv6dvljbwyxlgm1pkjcgyjk8jxb935j5as72qsv6na5859pbsyx /0war95qwvn866qk4y86xdrfhrsggib72pw82jnzkdkw1d91jhp5n /1c47b61jpkrkwhypnsjvprpbc2zgyfci7achpwrg5lln8sxglnhw /0pfsj0262yhr5n96p1819zb1a4z6cgn0ginjmhgm4h6608bhv219 /1wjf69ypblm9vzygl8ffakg2yq7w1brv1dz6njj463bks37gdfnv /1dpixy44h5bciy06g12580a6nqchjgnr3ibmkn42qj2yq9ncq638 /077dvck378y0lvl51ml4nvja25q2rv4xv9hr936bnhvb8qarqki9 /0y1blj50zrgkkg5zkjs2cgm4s9ai5kll8vgynxpx0k26m1y24aar /0hyfvv223a23z4b4j4gqjfcgif43rwwf179xymxd7fnzgsmpchf4"),("builder","/1k55hwwi52xi4q84lw5an9fibhm50w9yin23njm3g2km7pklq0h2/bin/bash"),("cmakeFlags",""),("configureFlags","--without-ensurepip --with-system-expat --with-system-libmpdec --with-openssl=/0war95qwvn866qk4y86xdrfhrsggib72pw82jnzkdkw1d91jhp5n --with-tzpath=/0ix53q4s751ar9l8spv2514y1msfpm7xz7k5mz69vrmpq4flzpqr/share/zoneinfo --with-lto --enable-shared --enable-loadable-sqlite-extensions CFLAGS=-I/1658y9zaz3jzsdj1qjphhjpl0gx9ijn6ajrd87q985ss7zlbq02d/include LIBS=-L/1658y9zaz3jzsdj1qjphhjpl0gx9ijn6ajrd87q985ss7zlbq02d/lib"),("depsBuildBuild",""),("depsBuildBuildPropagated",""),("depsBuildTarget",""),("depsBuildTargetPropagated",""),("depsHostHost",""),("depsHostHostPropagated",""),("depsTargetTarget",""),("depsTargetTargetPropagated",""),("disallowedReferences","/0war95qwvn866qk4y86xdrfhrsggib72pw82jnzkdkw1d91jhp5n"),("doCheck",""),("doInstallCheck",""),("enableParallelBuilding","1"),("enableParallelChecking","1"),("enableParallelInstalling","1"),("mesonFlags",""),("name","python3-3.12.7"),("nativeBuildInputs","/083nk88mf6skjrcaln608y52xgfs7mr0slmmvislvs2gjzxawqz4 /0j1l5xz81jckyb5hnnv8rcksa8d7x9r9sy0y3kl08647swsnvkc2"),("out","/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9"),("outputHashAlgo","sha256"),("outputHashMode","recursive"),("outputs","out"),("patches","/nix/store/s5myj3ybdn7wrsfpydj48mm24vnvw6bc-no-ldconfig.patch /nix/store/r112dk8w7zvdjipki58ch00m825li7fq-virtualenv-permissions.patch /nix/store/lpfs02z2i2hamz9f50p4bz6v0fs0600j-mimetypes.patch /nix/store/7f26mgj9vx5izbkbfirkd4m0dyxlrkvv-platform-triplet-detection.patch"),("pname","python3"),("postFixup",""),("postInstall","# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.12/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.12/test/__init__.py\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\nln -sL \"$out/share/man/man1/python3.1.gz\" \"$out/share/man/man1/python.1.gz\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.12/_sysconfigdata*.py $out/lib/python3.12/config-312*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /1658y9zaz3jzsdj1qjphhjpl0gx9ijn6ajrd87q985ss7zlbq02d -e /0ix53q4s751ar9l8spv2514y1msfpm7xz7k5mz69vrmpq4flzpqr '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /1658y9zaz3jzsdj1qjphhjpl0gx9ijn6ajrd87q985ss7zlbq02d -e /0ix53q4s751ar9l8spv2514y1msfpm7xz7k5mz69vrmpq4flzpqr '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.12/site-packages\"\nln -s \"$out/lib/python3.12/\"_sysconfigdata*.py \"$out/lib/python3.12/site-packages/\"\n# Include a sitecustomize.py file\ncp /nix/store/gx4pa1m75g8rrrggj7gi3bg38m4lg3q5-sitecustomize.py $out/lib/python3.12/site-packages/sitecustomize.py\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# Python 3.7 implements PEP 552, introducing support for deterministic bytecode.\n# compileall uses the therein introduced checked-hash method by default when\n# `SOURCE_DATE_EPOCH` is set.\n# We exclude lib2to3 because that's Python 2 code which fails\n# We build 3 levels of optimized bytecode. Note the default level, without optimizations,\n# is not reproducible yet. https://bugs.python.org/issue29708\n# Not creating bytecode will result in a large performance loss however, so we do build it.\nfind $out -name \"*.py\" | $out/bin/python -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -O  -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -OO -m compileall -q -f -x \"lib2to3\" -i -\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n\n# Disable system-wide pip installation. See https://peps.python.org/pep-0668/.\ncat <<'EXTERNALLY_MANAGED' > $out/lib/python3.12/EXTERNALLY-MANAGED\n[externally-managed]\nError=This command has been disabled as it tries to modify the immutable\n `/nix/store` filesystem.\n\n To use Python with Nix and nixpkgs, have a look at the online documentation:\n <https://nixos.org/manual/nixpkgs/stable/#python>.\nEXTERNALLY_MANAGED\n"),("postPatch","substituteInPlace Lib/subprocess.py \\\n  --replace-fail \"'/bin/sh'\" \"'/1k55hwwi52xi4q84lw5an9fibhm50w9yin23njm3g2km7pklq0h2/bin/sh'\"\nsubstituteInPlace Lib/mimetypes.py \\\n  --replace-fail \"@mime-types@\" \"/1kfmjhk6cbc61kky7lzx619dvdhx9x7a4vhhm1rii7k7nbp5skr0\"\n"),("preConfigure","# Attempt to purify some of the host info collection\nsed -E -i -e 's/uname -r/echo/g' -e 's/uname -n/echo nixpkgs/g' config.guess\nsed -E -i -e 's/uname -r/echo/g' -e 's/uname -n/echo nixpkgs/g' configure\n# Override the auto-detection in setup.py, which assumes a universal build\nexport PYTHON_DECIMAL_WITH_MACHINE=uint128\n# Ensure that modern platform features are enabled on Darwin in spite of having no version suffix.\nsed -E -i -e 's|Darwin/\\[12\\]\\[0-9\\]\\.\\*|Darwin/*|' configure\n# Also override the auto-detection in `configure`.\nsubstituteInPlace configure \\\n  --replace-fail 'libmpdec_machine=universal' 'libmpdec_machine=uint128'\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"),("preFixup",""),("prePatch","substituteInPlace configure --replace-fail '`/usr/bin/arch`' '\"i386\"'\n"),("propagatedBuildInputs",""),("propagatedNativeBuildInputs",""),("separateDebugInfo","1"),("setupHook","/1wvi82zgd5w640ynsw8jh38yzyg9fjvg3s13bbhwrp3skq80v879"),("src","/nix/store/ixlxlyp22scrw1xhl9i6p4hz9knq8fk7-Python-3.12.7.tar.xz"),("stdenv","/1xvz3zpzgz4rpvr0gmnmqzf96kvrlx4dg4gxn1cf5vgwfjr3qwa4"),("strictDeps",""),("system","aarch64-darwin"),("version","3.12.7")])