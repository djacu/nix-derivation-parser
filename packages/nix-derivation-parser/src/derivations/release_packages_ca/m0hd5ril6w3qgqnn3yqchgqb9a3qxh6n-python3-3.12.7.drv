Derive([("debug","","r:sha256",""),("out","","r:sha256","")],[("/nix/store/01y396lvhmx2jqpfm7x4d8h9d9h6x7zz-xz-5.6.3.drv",["dev","out"]),("/nix/store/0vf65ad1abp34sfbyzavc4isgr3m72mj-autoreconf-hook.drv",["out"]),("/nix/store/1xbqqz8yn0nlfrnhfffc6w0xk3dy3gp1-libxcrypt-4.4.36.drv",["out"]),("/nix/store/b5a44bblvcymna2m68bb01id02vp1l0z-ncurses-6.4.20221231.drv",["dev","out"]),("/nix/store/gkcji4j1h0x7sgdzx8kpzsykizx04mhw-expat-2.6.4.drv",["dev","out"]),("/nix/store/hjca9va672zn4zl788pqsx0w9mp4bvkp-python-setup-hook.sh.drv",["out"]),("/nix/store/hlzqfh212jkq790n1s64dgr5xn4w0xih-bash-5.2p37.drv",["dev","out"]),("/nix/store/hmli2kr287990qyz2l7ni89fzy6h79rs-autoconf-archive-2024.10.16.drv",["out"]),("/nix/store/l2dmx7ijvm1jkws20i74yqls4lqkilwc-mailcap-2.1.54.drv",["out"]),("/nix/store/lnaia29dkqm72faxfbw9ad2za0d35daz-pkg-config-wrapper-0.29.2.drv",["out"]),("/nix/store/m2w9vz726ggzjn3dwfi8aklnmpcpnbk7-Python-3.12.7.tar.xz.drv",["out"]),("/nix/store/mcz1yxsmm7yca1pg9qa0x6ylmqb7mx65-sqlite-3.46.1.drv",["dev","out"]),("/nix/store/miymf48isjp7ygl57cm7s6ffj417wbv8-zlib-1.3.1.drv",["dev","out"]),("/nix/store/p4qi5dzk7mdz2llxjzvi5zgwnk3s6xyh-mpdecimal-4.0.0.drv",["dev","out"]),("/nix/store/pifsfghqkxrh3h9wbw36wa3yax5bcga8-openssl-3.3.2.drv",["dev","out"]),("/nix/store/qlyy67m2h49icf1rjw93qifbakh1x8lx-stdenv-linux.drv",["out"]),("/nix/store/s1snygsbqjhbz9flcww68w5z6nrx0mbz-gdbm-1.24.drv",["dev","lib"]),("/nix/store/vq7314srxmiykn1p1fkmrk8rvslf1539-readline-8.2p13.drv",["dev","out"]),("/nix/store/w427nbcnx9df2y6k7cc37aihfdhz3ll4-tzdata-2024b.drv",["dev","out"]),("/nix/store/wh68ivjwmnddyhli9rrkr138ma85h7i2-nuke-references.drv",["out"]),("/nix/store/wv2888hh4fyph1k0nsgzf46qnlqd8fs8-bzip2-1.0.8.drv",["dev","out"]),("/nix/store/yq5chhpqpyn7m3qpgb358y5awh37rgrw-libffi-3.4.6.drv",["dev","out"])],["/nix/store/7f26mgj9vx5izbkbfirkd4m0dyxlrkvv-platform-triplet-detection.patch","/nix/store/gx4pa1m75g8rrrggj7gi3bg38m4lg3q5-sitecustomize.py","/nix/store/lpfs02z2i2hamz9f50p4bz6v0fs0600j-mimetypes.patch","/nix/store/r112dk8w7zvdjipki58ch00m825li7fq-virtualenv-permissions.patch","/nix/store/s5myj3ybdn7wrsfpydj48mm24vnvw6bc-no-ldconfig.patch","/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh","/nix/store/xicrk4waf3kazyf96aaavsirgx241r0s-separate-debug-info.sh"],"aarch64-linux","/1ki4x8gwdn0l6ydlj97g2b2dnywi3d44ij03j16zcri5fymwwqxf/bin/bash",["-e","/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh"],[("CPPFLAGS","-I/0b19b90hhpcijpdfzr7pgc6rp82w21ipz60gsnkdzb6bwbj9ahvj/include -I/1qm0cy0nlm2j4sw6rww1rj2idxips3ca9x66sqi68arz67bbpx1v/include -I/0sr421nxr2v34qpcg5kwrfk6vm9a7pyspa2vv33z90gkr2vx41l4/include -I/1m78igjy1kzm32khfm9xfbc2qm9b647pp1vsfivxhgb3x7hj95fw/include -I/0cif612jgayb56vhkfg5yx2h9lsp61yhh8qfxdn4igzpr720dz84/include -I/0h8jcxzapypjnfk5ny1q7smjcd27vf6p1j1r5dqixg1ifysg30zl/include -I/1p8hj2kcqkg6jrfywfqdnczd2pa86hizhp5vyagzdncm37kw8jv6/include -I/0jl2klbhq1nbirm4l999nqaxfz2s6dq758xr9g6j53bfv9r3a0b6/include -I/1knssy311qsfh69avyppnnqnjmrxyj5g771g6jwvp0rdwvmkb3wm/include -I/1hf7jcp8pfwsnsbhk92j3azhx5gwhkd0awp6l1chq07fjx9bshc0/include -I/0lhn8xmmh580z3lp1naliwbqbmr26673kdwikplgr9ny8fjp3ma1/include -I/022p1fvrykbh7amc7659r98g4fazbb86a619lgys1xhrl8qky64a/include -I/16gs25qmip3kx3h4fanq8q9v8mccy6xy8x24m2c31k5n09a9xq7f/include"),("LDFLAGS","-L/1hjrw5jw2h51dy7izmr45by2vfkwwgrxqsv7la4ipars3wd3mncy/lib -L/0rpb5l539fgba7fhcarzvvajxm1by2ivdbf5m33cwrh2xfx883qg/lib -L/14q4hv8mv9j3wszq5v1v0afkr1g1b4gcba4mzrwfhpnm4nnalvha/lib -L/1m78igjy1kzm32khfm9xfbc2qm9b647pp1vsfivxhgb3x7hj95fw/lib -L/1vbl9l1zh0r836526cjjk13x67r9p8y66a7n2n83wczsffjdqy1i/lib -L/1cg983d3aln4446ksi9zlrm235m8xvgbv823ph1zgh87nz7r35rb/lib -L/0f9y4mkg4d5a4pax0k6yw45szll43v5pd0fyqanpwc3hxix8n9jv/lib -L/0rky9ihcv2ns4asgmcji9k1bpxzckb93zxp2v00dc93s140jbbsh/lib -L/11gcgw4qrvgnh8ms6rskm96pxzzdbpq69dscd9s8dhim3lnkqr07/lib -L/18l6g386g5733w6y44z1pg13m9bvmc8hv9bqszld9p3vjv684inj/lib -L/1ynx97pfw1hajyx3shklllczm5d87wxf13d4chl8gmqr441pcgi2/lib -L/0yz5192xffp204laz7ccd3sgan1gf5l9adb6lk3fqvbx6kbfkdk5/lib -L/1fjdidv8gvc46jacvmj12j6xy19p7ix444qjq3hy90md2ijc1w38/lib"),("LIBS","-lcrypt"),("NIX_LDFLAGS","-lgcc_s"),("PYTHONHASHSEED","0"),("__structuredAttrs",""),("buildInputs","/0zyi4h2lbw0gwqvj6swm9xqnrz53ixgc4iff5hwapacjn4gw7jnz /0b19b90hhpcijpdfzr7pgc6rp82w21ipz60gsnkdzb6bwbj9ahvj /1qm0cy0nlm2j4sw6rww1rj2idxips3ca9x66sqi68arz67bbpx1v /0sr421nxr2v34qpcg5kwrfk6vm9a7pyspa2vv33z90gkr2vx41l4 /1m78igjy1kzm32khfm9xfbc2qm9b647pp1vsfivxhgb3x7hj95fw /0cif612jgayb56vhkfg5yx2h9lsp61yhh8qfxdn4igzpr720dz84 /0h8jcxzapypjnfk5ny1q7smjcd27vf6p1j1r5dqixg1ifysg30zl /1p8hj2kcqkg6jrfywfqdnczd2pa86hizhp5vyagzdncm37kw8jv6 /0jl2klbhq1nbirm4l999nqaxfz2s6dq758xr9g6j53bfv9r3a0b6 /1knssy311qsfh69avyppnnqnjmrxyj5g771g6jwvp0rdwvmkb3wm /1hf7jcp8pfwsnsbhk92j3azhx5gwhkd0awp6l1chq07fjx9bshc0 /0lhn8xmmh580z3lp1naliwbqbmr26673kdwikplgr9ny8fjp3ma1 /022p1fvrykbh7amc7659r98g4fazbb86a619lgys1xhrl8qky64a /16gs25qmip3kx3h4fanq8q9v8mccy6xy8x24m2c31k5n09a9xq7f"),("builder","/1ki4x8gwdn0l6ydlj97g2b2dnywi3d44ij03j16zcri5fymwwqxf/bin/bash"),("cmakeFlags",""),("configureFlags","--without-ensurepip --with-system-expat --with-system-libmpdec --with-openssl=/1p8hj2kcqkg6jrfywfqdnczd2pa86hizhp5vyagzdncm37kw8jv6 --with-tzpath=/1ynx97pfw1hajyx3shklllczm5d87wxf13d4chl8gmqr441pcgi2/share/zoneinfo --with-lto --enable-shared --enable-loadable-sqlite-extensions CFLAGS=-I/1m78igjy1kzm32khfm9xfbc2qm9b647pp1vsfivxhgb3x7hj95fw/include LIBS=-L/1m78igjy1kzm32khfm9xfbc2qm9b647pp1vsfivxhgb3x7hj95fw/lib ac_cv_func_lchmod=no"),("debug","/1k7af0a6abdk51bgf8idbn458a9b95n3lg3374g9cgssag6y8gd2"),("depsBuildBuild",""),("depsBuildBuildPropagated",""),("depsBuildTarget",""),("depsBuildTargetPropagated",""),("depsHostHost",""),("depsHostHostPropagated",""),("depsTargetTarget",""),("depsTargetTargetPropagated",""),("disallowedReferences","/1p8hj2kcqkg6jrfywfqdnczd2pa86hizhp5vyagzdncm37kw8jv6"),("doCheck",""),("doInstallCheck",""),("enableParallelBuilding","1"),("enableParallelChecking","1"),("enableParallelInstalling","1"),("mesonFlags",""),("name","python3-3.12.7"),("nativeBuildInputs","/0gri75icqynmnffp1hzqyj0a8cr3iiwp05cz73rm419gwm4kmg6r /0qfbg16wi39735kcnllikffj9xbpn7czq4zlvd5maypgqrw7kx1j /0z6dfnjrbi19f456a0g3bib58qm2h7qplr37zqjnsib0hmnm6l1p /157zafvy1pjlbbdc3rdn1bb416kxw2wnf8zg5nbdxn0ri6spq81g /nix/store/xicrk4waf3kazyf96aaavsirgx241r0s-separate-debug-info.sh"),("out","/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9"),("outputHashAlgo","sha256"),("outputHashMode","recursive"),("outputs","out debug"),("patches","/nix/store/s5myj3ybdn7wrsfpydj48mm24vnvw6bc-no-ldconfig.patch /nix/store/r112dk8w7zvdjipki58ch00m825li7fq-virtualenv-permissions.patch /nix/store/lpfs02z2i2hamz9f50p4bz6v0fs0600j-mimetypes.patch /nix/store/7f26mgj9vx5izbkbfirkd4m0dyxlrkvv-platform-triplet-detection.patch"),("pname","python3"),("postFixup","# https://github.com/python/cpython/blob/e488e300f5c01289c10906c2e53a8e43d6de32d8/configure.ac#L78\nsysconfigdataName=\"$(make --eval $'print-sysconfigdata-name:\n\\t@echo _sysconfigdata_$(ABIFLAGS)_$(MACHDEP)_$(MULTIARCH) ' print-sysconfigdata-name)\"\n\n# The CPython interpreter contains a _sysconfigdata_<platform specific suffix>\n# module that is imported by the sysconfig and distutils.sysconfig modules.\n# The sysconfigdata module is generated at build time and contains settings\n# required for building Python extension modules, such as include paths and\n# other compiler flags. By default, the sysconfigdata module is loaded from\n# the currently running interpreter (ie. the build platform interpreter), but\n# when cross-compiling we want to load it from the host platform interpreter.\n# This can be done using the _PYTHON_SYSCONFIGDATA_NAME environment variable.\n# The _PYTHON_HOST_PLATFORM variable also needs to be set to get the correct\n# platform suffix on extension modules. The correct values for these variables\n# are not documented, and must be derived from the configure script (see links\n# below).\ncat <<EOF >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"\\$1\" = '$out' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='$sysconfigdataName'\n  fi\n}\n\naddEnvHooks \"\\$hostOffset\" sysconfigdataHook\nEOF\n"),("postInstall","# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.12/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.12/test/__init__.py\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\nln -sL \"$out/share/man/man1/python3.1.gz\" \"$out/share/man/man1/python.1.gz\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.12/_sysconfigdata*.py $out/lib/python3.12/config-312*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /1m78igjy1kzm32khfm9xfbc2qm9b647pp1vsfivxhgb3x7hj95fw -e /1ynx97pfw1hajyx3shklllczm5d87wxf13d4chl8gmqr441pcgi2 '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /1m78igjy1kzm32khfm9xfbc2qm9b647pp1vsfivxhgb3x7hj95fw -e /1ynx97pfw1hajyx3shklllczm5d87wxf13d4chl8gmqr441pcgi2 '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.12/site-packages\"\nln -s \"$out/lib/python3.12/\"_sysconfigdata*.py \"$out/lib/python3.12/site-packages/\"\n# Include a sitecustomize.py file\ncp /nix/store/gx4pa1m75g8rrrggj7gi3bg38m4lg3q5-sitecustomize.py $out/lib/python3.12/site-packages/sitecustomize.py\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# Python 3.7 implements PEP 552, introducing support for deterministic bytecode.\n# compileall uses the therein introduced checked-hash method by default when\n# `SOURCE_DATE_EPOCH` is set.\n# We exclude lib2to3 because that's Python 2 code which fails\n# We build 3 levels of optimized bytecode. Note the default level, without optimizations,\n# is not reproducible yet. https://bugs.python.org/issue29708\n# Not creating bytecode will result in a large performance loss however, so we do build it.\nfind $out -name \"*.py\" | $out/bin/python -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -O  -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -OO -m compileall -q -f -x \"lib2to3\" -i -\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n\n# Disable system-wide pip installation. See https://peps.python.org/pep-0668/.\ncat <<'EXTERNALLY_MANAGED' > $out/lib/python3.12/EXTERNALLY-MANAGED\n[externally-managed]\nError=This command has been disabled as it tries to modify the immutable\n `/nix/store` filesystem.\n\n To use Python with Nix and nixpkgs, have a look at the online documentation:\n <https://nixos.org/manual/nixpkgs/stable/#python>.\nEXTERNALLY_MANAGED\n"),("postPatch","substituteInPlace Lib/subprocess.py \\\n  --replace-fail \"'/bin/sh'\" \"'/1ki4x8gwdn0l6ydlj97g2b2dnywi3d44ij03j16zcri5fymwwqxf/bin/sh'\"\nsubstituteInPlace Lib/mimetypes.py \\\n  --replace-fail \"@mime-types@\" \"/1x706gxfvnv8iq2kzskj2hcs359g7g846vy30innzfhi8282rbr4\"\n"),("preConfigure","# Attempt to purify some of the host info collection\nsed -E -i -e 's/uname -r/echo/g' -e 's/uname -n/echo nixpkgs/g' config.guess\nsed -E -i -e 's/uname -r/echo/g' -e 's/uname -n/echo nixpkgs/g' configure\n# Also override the auto-detection in `configure`.\nsubstituteInPlace configure \\\n  --replace-fail 'libmpdec_machine=universal' 'libmpdec_machine=uint128'\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"),("preFixup",""),("prePatch",""),("propagatedBuildInputs",""),("propagatedNativeBuildInputs",""),("separateDebugInfo","1"),("setupHook","/1wjf6safgj7j0ncp3j6i0krb3lp7qbiniig8iiywiknydyiydrz9"),("src","/nix/store/ixlxlyp22scrw1xhl9i6p4hz9knq8fk7-Python-3.12.7.tar.xz"),("stdenv","/0fickh57li33zz6qwd9kdqyz4ci9hxjbhipk1vdib0qy8mr39gdy"),("strictDeps",""),("system","aarch64-linux"),("version","3.12.7")])