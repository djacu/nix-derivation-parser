Derive([("out","","r:sha256","")],[("/nix/store/3n28dvp4v7il234sgxiqazmy6502kpmd-zlib-1.3.1.drv",["dev","out"]),("/nix/store/4mzrzr41bwishs4pq2lwpyinzj2anxk7-libffi-3.4.6.drv",["dev","out"]),("/nix/store/4zh7g2xs7zh0069hf6paxiff4wwqa6yw-bash-5.2p37.drv",["dev","out"]),("/nix/store/6vhivadpaaymr93aw1hkxr5jv1nj88xk-apple-sdk-11.3.drv",["out"]),("/nix/store/apir6xp7jlx0jr9x5md3mlz7qbrjysib-mailcap-2.1.54.drv",["out"]),("/nix/store/bfh8b5wxar8lwxmgqm7xs2gr71ykwzz7-openssl-3.3.2.drv",["dev","out"]),("/nix/store/diiqw9sg34qmajmx83cxa624d2la3l1b-llvm-16.0.6.drv",["out"]),("/nix/store/g9ndfm9bi9qb00xm8w37n64c9b4wbhwn-Python-3.12.7.tar.xz.drv",["out"]),("/nix/store/gcw7cyrv3gy8dbxnmzgs51rl2zqmsxhp-libxcrypt-4.4.36.drv",["out"]),("/nix/store/h1kxw46rh8v7gn4573yk1dfcvakfxny9-mpdecimal-4.0.0.drv",["dev","out"]),("/nix/store/h72l6p3cfpdbd3x1nlgn7ahbxd0x98jh-gdbm-1.24.drv",["dev","lib"]),("/nix/store/h8r91drpbkgizbn9c61k397fl1vc3bnv-bzip2-1.0.8.drv",["dev","out"]),("/nix/store/j9351cakkaffr076ya2n0d2dab5yl1jv-python-setup-hook.sh.drv",["out"]),("/nix/store/ns6rzjrq286linzzknx0mwk3snbdvaa4-sqlite-3.46.1.drv",["dev","out"]),("/nix/store/rwjjribz6c9kan4lfin4hgcjsdjr0rlh-expat-2.6.4.drv",["dev","out"]),("/nix/store/wlvdkr76aw0bbzhi98ff6paqi9d14g4f-readline-8.2p13.drv",["dev","out"]),("/nix/store/x2gr5flzy6p0mb2y3zpi2zfbl2cjjwkh-ncurses-6.4.20221231.drv",["dev","out"]),("/nix/store/xjcy5z45hpj714k7i92d018jzizfzzi4-nuke-references.drv",["out"]),("/nix/store/xvh1d3ix8850wrx8zrhjn6pxksf17n5b-stdenv-darwin.drv",["out"]),("/nix/store/ylynv4kslddsghj2nymib3ig0w6bl1l2-tzdata-2024b.drv",["dev","out"]),("/nix/store/zfqj65jazrq2yj5v8am4s0kklql9vzfr-xz-5.6.3.drv",["dev","out"])],["/nix/store/7f26mgj9vx5izbkbfirkd4m0dyxlrkvv-platform-triplet-detection.patch","/nix/store/gx4pa1m75g8rrrggj7gi3bg38m4lg3q5-sitecustomize.py","/nix/store/lpfs02z2i2hamz9f50p4bz6v0fs0600j-mimetypes.patch","/nix/store/r112dk8w7zvdjipki58ch00m825li7fq-virtualenv-permissions.patch","/nix/store/s5myj3ybdn7wrsfpydj48mm24vnvw6bc-no-ldconfig.patch","/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh"],"x86_64-darwin","/1x760yrhxxp5gpkvqjifskkxgfycp1n8jh3l82lmi4mrkwvbcxki/bin/bash",["-e","/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh"],[("CPPFLAGS","-I/0mwpvhb75iqbhhyg5by0pajpr40pjsnivxwnw5236cgkzk48c4ic/include -I/16610j1sr6ss90im86pbc53bj2r39a8al3cd7h8azp3ag3p4nbjv/include -I/097bxyky4kpkpn54qiv6mbmyh73sy67wvvnw4y6jlzrb47k7yr81/include -I/1jlqy7sai9jiwqf6w095sh8cc1jpp0apybwld5sdvghhq9fh0f4s/include -I/0fgzadp7jfg7fhj5b1v3rlk0gyv2s2wqd7k8m4pmxfji0ksv80bk/include -I/1rrhx8nhhgw8mdha1g2rzvdjwik0f21hldkwlzadk4inc28si02c/include -I/1f7piczbnnbx20krjfrgdq4306a1yb5z9cbj117kz1j3ymnlmdwc/include -I/1b327hpn7kqvshd3r19bf9ah7697q5fqxd3jjvb1v2kp3596fnwj/include -I/1y6j7k6mmfnshh48l3g115djfnvwx3g65zqlxr92hz9n06x4d78p/include -I/1fl1in32amyay982c2bb8k1qf67x62xy30n15cw0jbnhr9l7qg99/include -I/06szlgmkr9761zm9mmciqln9xfw7wnc18spwcccf37l5v5n3s3v5/include -I/09c9dxxlg864kznbs1cy13my67499l7rv824vagn3pvbjw4bvhkk/include -I/1gr1crhn0w38i7hw0l83mhj6c1aa7br0cfc6c9ag23r7kjz989lk/include -I/1vwrwljrpkgbzn7bdhz4ww0v1h9fs3gqkadly1gxhcp66k9fkcs1/include"),("LDFLAGS","-L/0m8si3bn79azkn5gmbiyid2dh24xlif6hnmjg8wi1bjk7r0m0d08/lib -L/1d5d3p8r7xccql0wdkyxn6cwmkjpc9ihsyvxs3bpy3ggjz3x5375/lib -L/1m0jwzlhdbpg1fysmij0bfgla59synnpl6c6qx80f96jgrfb3f4k/lib -L/1jlqy7sai9jiwqf6w095sh8cc1jpp0apybwld5sdvghhq9fh0f4s/lib -L/0yk2r28qirnzicgzf4cz5w4qx4r5zcsf4wgjagzlh6nzlv1zl1x5/lib -L/07p7njmcpwbn7z9kk53zgrnc6382b9xlnhnsw8yfm96xs1912706/lib -L/0wy46l9qirv4rj927l9piiagzfjkd6l6drjfvc6rl3bl2nrjn68s/lib -L/11r00sc908s9k7xs0l51mwnlnkrg1cg2dz8q9lywpzx8a1ymry38/lib -L/0ghparh8w4lp37y05d2g0x4dm60ij04q4c1dpnjcgfmncfr4d8gg/lib -L/0wz3h9bpwnwg64gbvqijwi7jb3wpd3zwpr2gbz5vjyrj6ladn8vz/lib -L/06szlgmkr9761zm9mmciqln9xfw7wnc18spwcccf37l5v5n3s3v5/lib -L/0139qd05jzancsxp7jjmqx8hdkxsghkd8fqxgxy51zpzzqqdrcdg/lib -L/18irbfzbbvh8sb4lklwi0in452ncsgr26wwfc97v4v04fiv4s0nh/lib -L/1zjbcpl17yk6mh0cj28xygzb5cxljwgks02yv9008ff9c6ybk9nw/lib"),("LIBS",""),("NIX_LDFLAGS",""),("PYTHONHASHSEED","0"),("__darwinAllowLocalNetworking",""),("__impureHostDeps","/bin/sh /usr/lib/libSystem.B.dylib /usr/lib/system/libunc.dylib /dev/zero /dev/random /dev/urandom /bin/sh"),("__propagatedImpureHostDeps",""),("__propagatedSandboxProfile",""),("__sandboxProfile",""),("__structuredAttrs",""),("buildInputs","/1dv1v7z3h4k4cx6302657rls4li4czzc9134971mcq13p6lm7gzv /0mwpvhb75iqbhhyg5by0pajpr40pjsnivxwnw5236cgkzk48c4ic /16610j1sr6ss90im86pbc53bj2r39a8al3cd7h8azp3ag3p4nbjv /097bxyky4kpkpn54qiv6mbmyh73sy67wvvnw4y6jlzrb47k7yr81 /1jlqy7sai9jiwqf6w095sh8cc1jpp0apybwld5sdvghhq9fh0f4s /0fgzadp7jfg7fhj5b1v3rlk0gyv2s2wqd7k8m4pmxfji0ksv80bk /1rrhx8nhhgw8mdha1g2rzvdjwik0f21hldkwlzadk4inc28si02c /1f7piczbnnbx20krjfrgdq4306a1yb5z9cbj117kz1j3ymnlmdwc /1b327hpn7kqvshd3r19bf9ah7697q5fqxd3jjvb1v2kp3596fnwj /1y6j7k6mmfnshh48l3g115djfnvwx3g65zqlxr92hz9n06x4d78p /1fl1in32amyay982c2bb8k1qf67x62xy30n15cw0jbnhr9l7qg99 /06szlgmkr9761zm9mmciqln9xfw7wnc18spwcccf37l5v5n3s3v5 /09c9dxxlg864kznbs1cy13my67499l7rv824vagn3pvbjw4bvhkk /1gr1crhn0w38i7hw0l83mhj6c1aa7br0cfc6c9ag23r7kjz989lk /1vwrwljrpkgbzn7bdhz4ww0v1h9fs3gqkadly1gxhcp66k9fkcs1"),("builder","/1x760yrhxxp5gpkvqjifskkxgfycp1n8jh3l82lmi4mrkwvbcxki/bin/bash"),("cmakeFlags",""),("configureFlags","--without-ensurepip --with-system-expat --with-system-libmpdec --with-openssl=/1f7piczbnnbx20krjfrgdq4306a1yb5z9cbj117kz1j3ymnlmdwc --with-tzpath=/0139qd05jzancsxp7jjmqx8hdkxsghkd8fqxgxy51zpzzqqdrcdg/share/zoneinfo --with-lto --enable-shared --enable-loadable-sqlite-extensions CFLAGS=-I/1jlqy7sai9jiwqf6w095sh8cc1jpp0apybwld5sdvghhq9fh0f4s/include LIBS=-L/1jlqy7sai9jiwqf6w095sh8cc1jpp0apybwld5sdvghhq9fh0f4s/lib"),("depsBuildBuild",""),("depsBuildBuildPropagated",""),("depsBuildTarget",""),("depsBuildTargetPropagated",""),("depsHostHost",""),("depsHostHostPropagated",""),("depsTargetTarget",""),("depsTargetTargetPropagated",""),("disallowedReferences","/1f7piczbnnbx20krjfrgdq4306a1yb5z9cbj117kz1j3ymnlmdwc"),("doCheck",""),("doInstallCheck",""),("enableParallelBuilding","1"),("enableParallelChecking","1"),("enableParallelInstalling","1"),("mesonFlags",""),("name","python3-3.12.7"),("nativeBuildInputs","/03a9f8nkv2rrzjqgiqj4ira2jm76494fb5ihfb9mm48b93zv8686 /0py9ly39shwfcvn8ckl43hljcygy7mfqi8b6c5i2w3svxzbcq4n2"),("out","/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9"),("outputHashAlgo","sha256"),("outputHashMode","recursive"),("outputs","out"),("patches","/nix/store/s5myj3ybdn7wrsfpydj48mm24vnvw6bc-no-ldconfig.patch /nix/store/r112dk8w7zvdjipki58ch00m825li7fq-virtualenv-permissions.patch /nix/store/lpfs02z2i2hamz9f50p4bz6v0fs0600j-mimetypes.patch /nix/store/7f26mgj9vx5izbkbfirkd4m0dyxlrkvv-platform-triplet-detection.patch"),("pname","python3"),("postFixup",""),("postInstall","# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.12/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.12/test/__init__.py\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\nln -sL \"$out/share/man/man1/python3.1.gz\" \"$out/share/man/man1/python.1.gz\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.12/_sysconfigdata*.py $out/lib/python3.12/config-312*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /1jlqy7sai9jiwqf6w095sh8cc1jpp0apybwld5sdvghhq9fh0f4s -e /0139qd05jzancsxp7jjmqx8hdkxsghkd8fqxgxy51zpzzqqdrcdg '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /1jlqy7sai9jiwqf6w095sh8cc1jpp0apybwld5sdvghhq9fh0f4s -e /0139qd05jzancsxp7jjmqx8hdkxsghkd8fqxgxy51zpzzqqdrcdg '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.12/site-packages\"\nln -s \"$out/lib/python3.12/\"_sysconfigdata*.py \"$out/lib/python3.12/site-packages/\"\n# Include a sitecustomize.py file\ncp /nix/store/gx4pa1m75g8rrrggj7gi3bg38m4lg3q5-sitecustomize.py $out/lib/python3.12/site-packages/sitecustomize.py\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# Python 3.7 implements PEP 552, introducing support for deterministic bytecode.\n# compileall uses the therein introduced checked-hash method by default when\n# `SOURCE_DATE_EPOCH` is set.\n# We exclude lib2to3 because that's Python 2 code which fails\n# We build 3 levels of optimized bytecode. Note the default level, without optimizations,\n# is not reproducible yet. https://bugs.python.org/issue29708\n# Not creating bytecode will result in a large performance loss however, so we do build it.\nfind $out -name \"*.py\" | $out/bin/python -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -O  -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -OO -m compileall -q -f -x \"lib2to3\" -i -\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n\n# Disable system-wide pip installation. See https://peps.python.org/pep-0668/.\ncat <<'EXTERNALLY_MANAGED' > $out/lib/python3.12/EXTERNALLY-MANAGED\n[externally-managed]\nError=This command has been disabled as it tries to modify the immutable\n `/nix/store` filesystem.\n\n To use Python with Nix and nixpkgs, have a look at the online documentation:\n <https://nixos.org/manual/nixpkgs/stable/#python>.\nEXTERNALLY_MANAGED\n"),("postPatch","substituteInPlace Lib/subprocess.py \\\n  --replace-fail \"'/bin/sh'\" \"'/1x760yrhxxp5gpkvqjifskkxgfycp1n8jh3l82lmi4mrkwvbcxki/bin/sh'\"\nsubstituteInPlace Lib/mimetypes.py \\\n  --replace-fail \"@mime-types@\" \"/0if6vf20rgzz0ihy38k8isxlfrwjvq8lg26mj8042611c9hx6ymk\"\n"),("preConfigure","# Attempt to purify some of the host info collection\nsed -E -i -e 's/uname -r/echo/g' -e 's/uname -n/echo nixpkgs/g' config.guess\nsed -E -i -e 's/uname -r/echo/g' -e 's/uname -n/echo nixpkgs/g' configure\n# Override the auto-detection in setup.py, which assumes a universal build\nexport PYTHON_DECIMAL_WITH_MACHINE=x64\n# Ensure that modern platform features are enabled on Darwin in spite of having no version suffix.\nsed -E -i -e 's|Darwin/\\[12\\]\\[0-9\\]\\.\\*|Darwin/*|' configure\n# Also override the auto-detection in `configure`.\nsubstituteInPlace configure \\\n  --replace-fail 'libmpdec_machine=universal' 'libmpdec_machine=x64'\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"),("preFixup",""),("prePatch","substituteInPlace configure --replace-fail '`/usr/bin/arch`' '\"i386\"'\n"),("propagatedBuildInputs",""),("propagatedNativeBuildInputs",""),("separateDebugInfo","1"),("setupHook","/1a1454hf5hbfbdp6h1n97zfpvgpbm4cdbh1y8hfh0vgyvgirdv9j"),("src","/nix/store/ixlxlyp22scrw1xhl9i6p4hz9knq8fk7-Python-3.12.7.tar.xz"),("stdenv","/06rl52kl644ckpyzrf8mvmcsj8pksd7wzvlv8yxmq15jzx23pz28"),("strictDeps",""),("system","x86_64-darwin"),("version","3.12.7")])