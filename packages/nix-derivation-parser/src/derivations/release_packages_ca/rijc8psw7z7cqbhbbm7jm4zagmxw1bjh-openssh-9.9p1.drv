Derive([("out","","r:sha256","")],[("/nix/store/2kjdkl3b1ikp83vijl0a0c9l5wp7cv7l-libfido2-1.15.0.drv",["dev"]),("/nix/store/4bi7yck1dzvpy83bx6imlgj8yk1p1ghy-autoreconf-hook.drv",["out"]),("/nix/store/57k1zm7k50rymxspqiqvl8gi9c5hgm47-ldns-1.8.4.drv",["dev"]),("/nix/store/84avns0b263wh6b257v0vmwk7xw0ibgv-stdenv-linux.drv",["out"]),("/nix/store/b9grlwx4qspv1r62p1v6wrk40qln3089-linux-pam-1.6.1.drv",["out"]),("/nix/store/cvcxb2k8wcblf9455ca70znidm3886g4-openssh-9.9p1.tar.gz.drv",["out"]),("/nix/store/f5h7jrcwhii8l4r2qaq1q944wdk6nnm9-libedit-20240808-3.1.drv",["dev"]),("/nix/store/gld19hknyxw2z5bygigjh59lcpisf0ir-zlib-1.3.1.drv",["dev"]),("/nix/store/jhk1rfl641vwjlabz9h5y7hawg6vapy5-gss-serv.c.patch?id=a7509603971ce2f3282486a43bb773b1b522af83.drv",["out"]),("/nix/store/l0mwpbmvcciap36zihfcv7hlfdgz7asb-openssl-3.3.2.drv",["dev"]),("/nix/store/l3k47ga0c90rq0dkfk3hnv67igxyjx6w-pkg-config-wrapper-0.29.2.drv",["out"]),("/nix/store/w3xjr881bg27yr4f274kqvr0bd8k0c97-bash-5.2p37.drv",["out"]),("/nix/store/yzaszmdnbc6a69c1f2axqcf3k3c11fx4-libredirect-0.drv",["out"])],["/nix/store/7jbzj9s2wkbznn93ga3aqka6vfx06gjg-ssh-keysign-8.5.patch","/nix/store/isik6ifcjxpw22sfh3kz37galficc78c-locale_archive.patch","/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh","/nix/store/ybb4xs45dkngdf3x1xnxqgzn5zmv5alf-dont_create_privsep_path.patch"],"x86_64-linux","/106gbyghamnnlrj580l6fcr98cpc1zaqgsbrnakgainp3i0724k2/bin/bash",["-e","/nix/store/v6x3cs394jgqfbi0a42pam708flxaphh-default-builder.sh"],[("NIX_HARDENING_ENABLE","bindnow format fortify fortify3 pic relro stackprotector strictoverflow zerocallusedregs pie"),("PATH_PASSWD_PROG","/run/wrappers/bin/passwd"),("__structuredAttrs",""),("buildFlags","SSH_KEYSIGN=ssh-keysign"),("buildInputs","/0jm3frji2g7hpxhiynlhq1c9531g4jcsddac8y25qn67fqwsvkag /1pg0fp4yw0imw02kvam877gnmc4cxnyg2c02wk0m7gjyid3y0438 /1p58w36q4mhh4h4g1hv67bnf76xciis6dfbvfka1zjwmh0cbc35j /1fzsr0nnwdzmkamndf0chvc0w2kqn1yhp08w7f2k57ziiqggcg18 /0c9b74j0qbf0yh3ypwcfwy7zs0hrkcd6w7f3hj87a0d8bvrcj6pp /1cy15dcc6pv98r52kh3b5hl1lpx3xjlqlfmxavb98w9qa9x9r4nm"),("builder","/106gbyghamnnlrj580l6fcr98cpc1zaqgsbrnakgainp3i0724k2/bin/bash"),("checkTarget","t-exec unit file-tests interop-tests"),("cmakeFlags",""),("configureFlags","--sbindir=${out}/bin --localstatedir=/var --with-pid-dir=/run --with-mantype=man --with-libedit=yes --disable-strip --with-pam --disable-dsa-keys --sysconfdir=/etc/ssh --with-security-key-builtin=yes --with-ldns"),("depsBuildBuild",""),("depsBuildBuildPropagated",""),("depsBuildTarget",""),("depsBuildTargetPropagated",""),("depsHostHost",""),("depsHostHostPropagated",""),("depsTargetTarget",""),("depsTargetTargetPropagated",""),("doCheck",""),("doInstallCheck",""),("enableParallelBuilding","1"),("enableParallelChecking",""),("enableParallelInstalling","1"),("hardeningEnable","pie"),("installFlags","sysconfdir=${out}/etc/ssh"),("installTargets","install-nokeys"),("mesonFlags",""),("name","openssh-9.9p1"),("nativeBuildInputs","/0cgwdczksfz20hab8g0ld7pb7j99prhwafmyqi226r7dh8xrcijy /0v57zn3yn8gyl66vw1jzdwck4dpch25cjqkkgqp9d7qlcy81m7n5"),("out","/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9"),("outputHashAlgo","sha256"),("outputHashMode","recursive"),("outputs","out"),("patches","/nix/store/isik6ifcjxpw22sfh3kz37galficc78c-locale_archive.patch /nix/store/6id7rg81nbkx9r9pxvax7nssr11xdaas-gss-serv.c.patch?id=a7509603971ce2f3282486a43bb773b1b522af83 /nix/store/ybb4xs45dkngdf3x1xnxqgzn5zmv5alf-dont_create_privsep_path.patch /nix/store/7jbzj9s2wkbznn93ga3aqka6vfx06gjg-ssh-keysign-8.5.patch"),("pname","openssh"),("postInstall","# Install ssh-copy-id, it's very useful.\ncp contrib/ssh-copy-id $out/bin/\nchmod +x $out/bin/ssh-copy-id\ncp contrib/ssh-copy-id.1 $out/share/man/man1/\n"),("postPatch","substituteInPlace Makefile.in --replace '$(INSTALL) -m 4711' '$(INSTALL) -m 0711'\n"),("preCheck","# construct a dummy HOME\nexport HOME=$(realpath ../dummy-home)\nmkdir -p ~/.ssh\n\n# construct a dummy /etc/passwd file for the sshd under test\n# to use to look up the connecting user\nDUMMY_PASSWD=$(realpath ../dummy-passwd)\ncat > $DUMMY_PASSWD <<EOF\n$(whoami)::$(id -u):$(id -g)::$HOME:$SHELL\nEOF\n\n# we need to NIX_REDIRECTS /etc/passwd both for processes\n# invoked directly and those invoked by the \"remote\" session\ncat > ~/.ssh/environment.base <<EOF\nNIX_REDIRECTS=/etc/passwd=$DUMMY_PASSWD\nLD_PRELOAD=/0d6h1mwbal05qk1snmijv9n8impgkk4wcplyi3dbbfldim6l7dfa/lib/libredirect.so\nEOF\n\n# use an ssh environment file to ensure environment is set\n# up appropriately for build environment even when no shell\n# is invoked by the ssh session. otherwise the PATH will\n# only contain default unix paths like /bin which we don't\n# have in our build environment\ncat - regress/test-exec.sh > regress/test-exec.sh.new <<EOF\ncp $HOME/.ssh/environment.base $HOME/.ssh/environment\necho \"PATH=\\$PATH\" >> $HOME/.ssh/environment\nEOF\nmv regress/test-exec.sh.new regress/test-exec.sh\n\n# explicitly enable the PermitUserEnvironment feature\nsubstituteInPlace regress/test-exec.sh \\\n  --replace \\\n    'cat << EOF > $OBJ/sshd_config' \\\n    $'cat << EOF > $OBJ/sshd_config\\n\\tPermitUserEnvironment yes'\n\n# some tests want to use files under /bin as example files\nfor f in regress/sftp-cmds.sh regress/forwarding.sh; do\n  substituteInPlace $f --replace '/bin' \"$(dirname $(type -p ls))\"\ndone\n\n# set up NIX_REDIRECTS for direct invocations\nset -a; source ~/.ssh/environment.base; set +a\n"),("preConfigure","# Setting LD causes `configure' and `make' to disagree about which linker\n# to use: `configure' wants `gcc', but `make' wants `ld'.\nunset LD\n"),("propagatedBuildInputs",""),("propagatedNativeBuildInputs",""),("src","/nix/store/q0ayaw07lfv31qm6viphk3m8n2bczc2r-openssh-9.9p1.tar.gz"),("stdenv","/1aipp690wc31xkcjpxmf60p9jxvr9pz0nhlh5z0f1lh095syp33k"),("strictDeps","1"),("system","x86_64-linux"),("version","9.9p1")])